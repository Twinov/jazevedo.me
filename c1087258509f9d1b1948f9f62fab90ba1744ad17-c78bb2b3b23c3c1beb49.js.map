{"version":3,"file":"c1087258509f9d1b1948f9f62fab90ba1744ad17-c78bb2b3b23c3c1beb49.js","mappings":"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","sources":["webpack://jazevedo.me/./src/components/Article.tsx","webpack://jazevedo.me/./src/components/ProjectBackground.tsx","webpack://jazevedo.me/./src/components/ProjectFields.tsx","webpack://jazevedo.me/./src/components/ProjectOverview.tsx","webpack://jazevedo.me/./src/images/project-background.inline.svg"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\n\nimport { gap } from \"../theme/spacing\";\nimport { color, ColorMode, hybridColor, mode } from \"../theme/color\";\nimport { down } from \"../theme/media\";\nimport { shadow } from \"../theme/shadows\";\nimport { highlightLinks } from \"../theme/mixins\";\nimport { iframeClass } from \"./Iframe\";\n\n/**\n * Class name for wrapping an image in a \"card\" (i.e. have a background color\n * and padding outside the image).\n */\nexport const cardImageClass = \"article-card-image\";\n\nconst Styled = {\n  Article: styled.article`\n    --par-spacing: ${gap.micro};\n    --large-block-spacing: ${gap.milli};\n\n    ${down(\"md\")} {\n      --large-block-spacing: ${gap.micro};\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      margin-top: var(--large-block-spacing);\n      margin-bottom: var(--par-spacing);\n    }\n\n    pre,\n    blockquote,\n    hr,\n    table,\n    figure {\n      margin-bottom: var(--large-block-spacing);\n    }\n\n    figure + figure {\n      ${down(\"md\")} {\n        margin-top: calc(var(--site-padding) - var(--par-spacing));\n      }\n    }\n\n    p,\n    ol,\n    ul {\n      margin-bottom: var(--par-spacing);\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      color: ${color(\"text-strong\")};\n    }\n\n    ul {\n      position: relative;\n      list-style: none;\n      padding-left: 1.5em;\n      margin-left: 0.8em;\n\n      li:before {\n        content: \"\\\\25C6\";\n        font-size: 0.6em;\n        position: absolute;\n        transform: translateY(0.7em);\n        left: 0;\n      }\n    }\n\n    ol {\n      padding-inline-start: 32px;\n\n      & > li {\n        padding-left: 0.65rem;\n      }\n    }\n\n    ul,\n    ol {\n      & > li {\n        & > :last-child {\n          margin-bottom: 0;\n        }\n      }\n\n      &:not(.no-list-spacing) > li {\n        /* Add spacing to the start of each paragraph in a ul or ol,\n        since if it turns into a list of paragraphs, spacing is likely desired.\n        This can be turned off by using a div wrapper with the '.no-list-spacing' class. */\n        &:not(:first-of-type) {\n          & > p {\n            margin-top: var(--par-spacing);\n          }\n        }\n      }\n    }\n\n    blockquote {\n      padding: ${gap.micro};\n      border-left: solid 8px ${color(\"primary\")};\n      border-bottom-left-radius: 8px;\n      border-top-left-radius: 8px;\n\n      ${mode(ColorMode.Light)} {\n        background-color: ${rgba(hybridColor(\"primary\", ColorMode.Light), 0.2)};\n      }\n\n      ${mode(ColorMode.Dark)} {\n        background-color: ${rgba(hybridColor(\"primary\", ColorMode.Dark), 0.2)};\n      }\n\n      ${down(\"sm\")} {\n        padding: ${gap.nano};\n      }\n\n      & > :last-child {\n        margin-bottom: 0;\n      }\n\n      /* When forced-colors are enabled, manually add a border */\n      @media (forced-colors: active) {\n        /* Add a border to every side except left\n        (it already has a thick border) */\n        border-right: solid 1px;\n        border-bottom: solid 1px;\n        border-top: solid 1px;\n      }\n    }\n\n    table {\n      border-collapse: collapse;\n      border: none;\n      --border-radius: 8px;\n      border-radius: var(--border-radius);\n      box-shadow: ${shadow(\"z2\")};\n\n      thead tr:first-of-type th:first-of-type {\n        border-top-left-radius: var(--border-radius);\n      }\n\n      thead tr:first-of-type th:last-child {\n        border-top-right-radius: var(--border-radius);\n      }\n\n      tbody tr:last-child td:first-of-type {\n        border-bottom-left-radius: var(--border-radius);\n      }\n\n      tbody tr:last-child td:last-child {\n        border-bottom-right-radius: var(--border-radius);\n      }\n\n      /* When forced-colors are enabled, manually add a border\n      (the color is ignored) */\n      @media (forced-colors: active) {\n        border: solid 1px white;\n\n        td,\n        th {\n          border: solid 1px white;\n        }\n      }\n\n      td,\n      th {\n        min-width: 6rem;\n        padding: 0.75rem;\n        vertical-align: top;\n        text-align: left;\n      }\n\n      td:not(:first-of-type),\n      th:not(:first-of-type) {\n        min-width: 8rem;\n      }\n\n      ${down(\"md\")} {\n        td:not(:first-of-type),\n        th:not(:first-of-type) {\n          min-width: 10rem;\n        }\n      }\n\n      tbody {\n        border: none;\n\n        ${mode(ColorMode.Light)} {\n          tr:nth-of-type(2n) {\n            background-color: ${color(\"bg+10\")};\n          }\n\n          tr:nth-of-type(2n + 1) {\n            background-color: ${color(\"bg+5\")};\n          }\n        }\n\n        ${mode(ColorMode.Dark)} {\n          tr:nth-of-type(2n) {\n            background-color: ${color(\"bg+15\")};\n          }\n\n          tr:nth-of-type(2n + 1) {\n            background-color: ${color(\"bg+10\")};\n          }\n        }\n      }\n\n      thead {\n        tr {\n          box-shadow: ${shadow(\"z1\")};\n          z-index: 1;\n          position: relative;\n\n          ${mode(ColorMode.Light)} {\n            background-color: ${color(\"bg+15\")};\n          }\n\n          ${mode(ColorMode.Dark)} {\n            background-color: ${color(\"bg+20\")};\n          }\n        }\n\n        th {\n          font-size: 0.9rem;\n          text-transform: uppercase;\n          color: ${color(\"text-faint\")};\n          letter-spacing: 1px;\n        }\n      }\n\n      td {\n        font-size: 0.9rem;\n        font-weight: 400;\n      }\n    }\n\n    & a:not(.gatsby-resp-image-link) {\n      ${highlightLinks}\n    }\n\n    --img-border-radius: 8px;\n    .gatsby-resp-image-wrapper {\n      max-width: none !important;\n      box-shadow: ${shadow(\"z2\")};\n      border-radius: var(--img-border-radius);\n      overflow: hidden;\n    }\n\n    .${cardImageClass} {\n      --card-image-padding: ${gap.nano};\n\n      box-shadow: ${shadow(\"z2\")};\n      padding: var(--card-image-padding);\n      background-color: ${color(\"bg+15\")};\n      border-radius: var(--img-border-radius);\n\n      .gatsby-resp-image-wrapper {\n        /* Remove the default box shadow and border radius from the image wrapper */\n        box-shadow: none;\n        border-radius: 0;\n      }\n    }\n\n    /* Add a border radius and box shadow to direct children that are\n    images or images in links. If needed an escape hatch can be added if this\n    is too zealous and also applies to inline images (but those should be in <p>'s) */\n    & > img,\n    & > a > img {\n      border-radius: var(--img-border-radius);\n      box-shadow: ${shadow(\"z2\")};\n      display: block;\n\n      /* If the image is not a Gatsby responsive image, make it responsive */\n      &:not(.gatsby-resp-image-image) {\n        width: 100%;\n      }\n    }\n\n    .${iframeClass} {\n      margin-top: ${gap.micro};\n      border-radius: var(--img-border-radius);\n      box-shadow: ${shadow(\"z2\")};\n    }\n  `,\n};\n\nexport type ArticleProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Supplies styles to markdown-style content\n * (i.e. headings, anchors, paragraphs, code blocks)\n * in the children.\n */\nexport default function Article({\n  children,\n  className,\n  style,\n}: ArticleProps): React.ReactElement {\n  return (\n    <Styled.Article className={className} style={style}>\n      {children}\n    </Styled.Article>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport BackgroundSVG from \"../images/project-background.inline.svg\";\nimport { down } from \"../theme/media\";\nimport { mode, ColorMode, color } from \"../theme/color\";\n\nconst Styled = {\n  Wrapper: styled.div`\n    height: 100%;\n    width: 100%;\n    z-index: -1;\n    overflow: hidden;\n    position: relative;\n  `,\n  SVG: styled(BackgroundSVG)`\n    --width: 2920px;\n    --height: 737px;\n\n    position: absolute;\n    top: 0;\n    left: calc(50% - var(--width) / 2 - 80px);\n    width: var(--width);\n    height: var(--height);\n\n    ${down(\"lg\")} {\n      /* Fill more height on smaller screens */\n      left: -910px;\n      --width: 3030px;\n      --height: 843px;\n    }\n\n    /* These correspond to calsses in the SVG */\n    .background-piece-1 {\n      ${mode(ColorMode.Light)} {\n        fill: ${color(\"bg-5\")};\n        filter: drop-shadow(0 0 24px rgba(255, 255, 255, 0.3));\n      }\n\n      ${mode(ColorMode.Dark)} {\n        fill: ${color(\"bg+5\")};\n        filter: drop-shadow(0 0 24px rgba(0, 0, 0, 0.2));\n      }\n    }\n\n    .background-piece-2 {\n      ${mode(ColorMode.Light)} {\n        fill: ${color(\"bg-10\")};\n        filter: drop-shadow(0 0 24px rgba(255, 255, 255, 0.3));\n      }\n\n      ${mode(ColorMode.Dark)} {\n        fill: ${color(\"bg+10\")};\n        filter: drop-shadow(0 0 24px rgba(0, 0, 0, 0.2));\n      }\n    }\n\n    /* When forced-colors are enabled, hide the background */\n    @media (forced-colors: active) {\n      display: none;\n    }\n  `,\n};\n\nexport type ProjectBackgroundProps = {\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Large, top-anchored triangles\n * that visually offset the left-aligned project overview.\n * Used on main project pages.\n */\nexport default function ProjectBackground({\n  className,\n  style,\n}: ProjectBackgroundProps): React.ReactElement {\n  return (\n    <Styled.Wrapper className={className} style={style}>\n      <Styled.SVG />\n    </Styled.Wrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { gap } from \"../theme/spacing\";\nimport { color } from \"../theme/color\";\n\nconst Styled = {\n  ProjectFields: styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: ${gap.milli};\n    flex-wrap: wrap;\n  `,\n  FieldLabel: styled.p`\n    opacity: 0.65;\n    margin-bottom: -4px;\n  `,\n  FieldValue: styled.p`\n    font-size: 1.1rem;\n    color: ${color(\"text-strong\")};\n  `,\n};\n\nexport type Field = {\n  label: string;\n  value: string;\n};\n\nexport type ProjectFieldsProps = {\n  fields: Field[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Row of fields in a project overview,\n * each consisting of a label and value.\n * Used for start/end dates.\n */\nexport default function ProjectFields({\n  fields,\n  className,\n  style,\n}: ProjectFieldsProps): React.ReactElement {\n  return (\n    <Styled.ProjectFields className={className} style={style}>\n      {fields.map(({ label, value }, i) => (\n        <div key={i}>\n          <Styled.FieldLabel>{label}</Styled.FieldLabel>\n          <Styled.FieldValue>{value}</Styled.FieldValue>\n        </div>\n      ))}\n    </Styled.ProjectFields>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { ButtonFragment } from \"./LinkButton/schema\";\nimport Button from \"./Button\";\nimport Article from \"./Article\";\nimport ProjectFields from \"./ProjectFields\";\nimport ProjectTopics from \"./ProjectTopics\";\nimport { color } from \"../theme/color\";\nimport { gap } from \"../theme/spacing\";\n\nconst Styled = {\n  Type: styled.h2`\n    opacity: 0.85;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.95rem;\n    font-weight: 400;\n    margin-bottom: ${gap.atto};\n  `,\n  Title: styled.h1`\n    font-weight: 700;\n    font-size: 2.7rem;\n    line-height: 0.95em;\n    color: ${color(\"text-strong\")};\n    margin-bottom: ${gap.micro};\n  `,\n  Fields: styled(ProjectFields)`\n    margin-bottom: ${gap.micro};\n  `,\n  Lead: styled(Article)`\n    margin-bottom: calc(${gap.micro} + ${gap.pico});\n  `,\n  Topics: styled(ProjectTopics)`\n    margin-bottom: ${gap.milli};\n  `,\n  ButtonBar: styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: ${gap.nano};\n    flex-wrap: wrap;\n  `,\n};\n\nexport type ProjectOverviewProps = {\n  type: string;\n  title: string;\n  start: string;\n  end: string | null;\n  lead: string;\n  mainTopics: string[];\n  secondaryTopics: string[];\n  buttons: ButtonFragment[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Project overview that appears at the top of main project pages\n */\nexport default function ProjectOverview({\n  type,\n  title,\n  start,\n  end,\n  lead,\n  mainTopics,\n  secondaryTopics,\n  buttons,\n  className,\n  style,\n}: ProjectOverviewProps): React.ReactElement {\n  const fields = [{ label: \"Start\", value: start }];\n  if (end != null) {\n    fields.push({ label: \"End\", value: end });\n  }\n\n  return (\n    <div className={className} style={style}>\n      <Styled.Type>{type}</Styled.Type>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Fields fields={fields} />\n      <Styled.Lead>\n        {/* `lead` comes from local markdown files,\n        and is designed to be able to contain HTML */}\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: lead }} />\n      </Styled.Lead>\n      <Styled.Topics main={mainTopics} secondary={secondaryTopics} />\n      <Styled.ButtonBar>\n        {buttons.map((button, i) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <Button key={i} {...button} />\n        ))}\n      </Styled.ButtonBar>\n    </div>\n  );\n}\n","var React = require('react');\n\nfunction ProjectBackgroundInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"className\":\"background-piece-1\",\"d\":\"m 1068.0944,915.59776 c 12.0643,10.34178 29.2,12.5 43.5,5.40001 l 351.6,-175.8 130.6,112.1 c 11.2,9.6 27.2,11.7 40.5,5 L 3356.9687,0.002252 0,0.004162 Z\",\"key\":0}),React.createElement(\"path\",{\"className\":\"background-piece-2\",\"d\":\"m 1867.5944,342.99777 c 11,8.39999 19.9,7.8 29.6,2.8 L 2590.3209,0 1454.5576,0.0016 Z\",\"key\":1})]);\n}\n\nProjectBackgroundInline.defaultProps = {\"version\":\"1.1\",\"viewBox\":\"0 0 3356.9686 975.14413\",\"xmlSpace\":\"preserve\"};\n\nmodule.exports = ProjectBackgroundInline;\n\nProjectBackgroundInline.default = ProjectBackgroundInline;\n"],"names":["cardImageClass","Styled","Article","gap","down","color","mode","ColorMode","rgba","hybridColor","shadow","highlightLinks","iframeClass","children","className","style","___EmotionJSX","Wrapper","SVG","_styled","BackgroundSVG","ProjectBackground","ProjectFields","FieldLabel","FieldValue","fields","map","i","label","value","key","Type","Title","Fields","Lead","Topics","ProjectTopics","ButtonBar","ProjectOverview","type","title","start","end","lead","mainTopics","secondaryTopics","buttons","push","dangerouslySetInnerHTML","__html","main","secondary","button","Button","React","ProjectBackgroundInline","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}