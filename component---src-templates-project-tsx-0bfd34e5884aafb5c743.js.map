{"version":3,"file":"component---src-templates-project-tsx-0bfd34e5884aafb5c743.js","mappings":"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","sources":["webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/construct.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://jazevedo.me/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://jazevedo.me/./src/components/Button.tsx","webpack://jazevedo.me/./src/components/LinkButton/index.ts","webpack://jazevedo.me/./src/components/CodeBlock.tsx","webpack://jazevedo.me/./src/components/Mdx.tsx","webpack://jazevedo.me/./src/components/Topic.tsx","webpack://jazevedo.me/./src/components/ProjectTopics.tsx","webpack://jazevedo.me/./src/components/Article.tsx","webpack://jazevedo.me/./src/components/ProjectFields.tsx","webpack://jazevedo.me/./src/components/ProjectOverview.tsx","webpack://jazevedo.me/./src/components/ProjectBackground.tsx","webpack://jazevedo.me/./src/templates/Project.tsx","webpack://jazevedo.me/./node_modules/gatsby-plugin-mdx/index.js","webpack://jazevedo.me/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://jazevedo.me/./src/images/project-background.inline.svg"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\nimport classNames from \"classnames\";\n\nimport { color } from \"../theme/color\";\nimport { shadow } from \"../theme/shadows\";\nimport LinkButton from \"./LinkButton\";\nimport { LinkButtonProps } from \"./LinkButton/LinkButton\";\n\nconst Styled = {\n  Button: styled(LinkButton)`\n    position: relative;\n    text-decoration: none;\n    border-radius: 4px;\n\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n      display: block !important;\n    }\n\n    box-shadow: ${shadow(\"z1\")};\n    --highlight-bg: transparent;\n    --border-size: 0px;\n\n    &.variant-solid {\n      background-color: ${color(\"primary\")};\n      color: ${color(\"light\")};\n\n      &:hover {\n        --highlight-bg: ${color(\"primary+10\")};\n      }\n\n      &:active {\n        --highlight-bg: ${color(\"primary-10\")};\n      }\n    }\n\n    &.variant-hollow {\n      background-color: ${rgba(color(\"light\"), 0.1)};\n      color: ${color(\"text-strong\")};\n      --border-size: 2px;\n\n      &:hover {\n        --highlight-bg: ${rgba(color(\"light\"), 0.1)};\n      }\n\n      &:active {\n        --highlight-bg: ${rgba(color(\"light\"), 0.2)};\n      }\n    }\n\n    --x-padding: 15px;\n    --y-padding: 8px;\n    padding-top: calc(var(--y-padding) - calc(var(--border-size) * 2));\n    padding-bottom: calc(var(--y-padding) - calc(var(--border-size) * 2));\n    padding-left: calc(var(--x-padding) - calc(var(--border-size) * 2));\n    padding-right: calc(var(--x-padding) - calc(var(--border-size) * 2));\n    border: var(--border-size) solid ${color(\"primary\")};\n\n    &:hover {\n      box-shadow: ${shadow(\"z2\")};\n    }\n\n    &:active {\n      box-shadow: ${shadow(\"z0\")};\n    }\n\n    /* Use an absolutely positioned pseudo-element\n    that animates between transparent and opaque\n    to simulate the <Button> having a background color transition\n    without creating an ugly transition upon changing themes */\n    &::before {\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: 100%;\n      content: \" \";\n      transition: 0.1s background-color linear;\n      background-color: var(--highlight-bg);\n      border-radius: 4px;\n      z-index: 0;\n    }\n\n    & > * {\n      /* Ensure the pseudo-element is positioned below the content\n      by creating a new stacking context for the content.\n      This relies on always wrapping children in a span.\n      We do this manually in <Button> for direct children,\n      and for <LinkButton>, the text and icon props\n      automatically get wrapped */\n      position: relative;\n    }\n\n    /* When forced-colors are enabled, add a border to improve the contrast\n    of the hit target (the color is ignored). Additionally, add an underline on\n    hover to improve the readability of the states. */\n    @media (forced-colors: active) {\n      border: 2px solid white;\n\n      &:hover,\n      &:active {\n        text-decoration: underline;\n      }\n    }\n  `,\n};\n\nexport type ButtonProps = LinkButtonProps & {\n  variant?: \"solid\" | \"hollow\" | null;\n};\n\n/**\n * Styled `<LinkButton>` component that looks like a traditional button\n */\nexport default function Button({\n  variant,\n  className,\n  children,\n  ...rest\n}: ButtonProps): React.ReactElement {\n  // Manually wrap any text nodes with a <span> element\n  // to ensure that the pseudo-element stacking order works.\n  const derivedChildren = React.Children.map(\n    children,\n    (child): React.ReactNode => {\n      if (typeof child === \"string\") return <span>{child}</span>;\n      return child;\n    }\n  );\n\n  return (\n    <Styled.Button\n      className={classNames(className, `variant-${variant ?? \"solid\"}`)}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    >\n      {derivedChildren}\n    </Styled.Button>\n  );\n}\n","import LinkButton from \"./LinkButton\";\n\nexport default LinkButton;\n","import styled from \"@emotion/styled\";\n\nimport { scrollBarAuto } from \"../theme/mixins\";\n\n/**\n * Styled `<pre>` element that automatically styles Prism-highlighted content.\n */\nconst CodeBlock = styled.pre`\n  position: relative;\n  margin: 0;\n\n  /* Important required to override one-{dark,light} theme files:\n  (included in /src/components/GlobalCss.tsx) */\n  padding: 0 !important;\n  background-color: transparent !important;\n\n  & > code {\n    font-size: 1rem;\n  }\n\n  ${scrollBarAuto(0.125)}\n  overflow: auto;\n\n  /* When forced-colors are enabled, the pre element already has a border\n  (due to the invisible 1px border added in the one-{dark,light} theme files).\n  Add padding internal to the element to improve the aesthetics of the border. */\n  @media (forced-colors: active) {\n    /* Important required to override above important: */\n    padding: 16px !important;\n  }\n`;\n\nexport default CodeBlock;\n","import { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport React, { useMemo } from \"react\";\n\nimport Figure from \"./Figure\";\nimport Icon from \"./Icon\";\nimport LinkButton from \"./LinkButton/LinkButton\";\nimport CodeBlock from \"./CodeBlock\";\n\n// Shortcodes available to MDX content\nexport const shortcodes = {\n  Figure,\n  Icon,\n} as const;\n\n// React components that replace HTML components in the markdown\nexport const overrides = {\n  a: LinkButton,\n  pre: CodeBlock,\n} as const;\n\nexport type MdxProps = {\n  content: string;\n  components?: Record<string, React.ComponentType<unknown>>;\n  passthroughProps?: Record<string, unknown>;\n};\n\n/**\n * MDX Renderer, including shortcodes used when writing MDX\n */\nexport default function Mdx({\n  content,\n  components,\n  passthroughProps,\n}: MdxProps): React.ReactElement {\n  return (\n    <MDXProvider\n      components={useMemo(\n        () => ({ ...shortcodes, ...overrides, ...components }),\n        [components]\n      )}\n    >\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <MDXRenderer {...passthroughProps}>{content}</MDXRenderer>\n    </MDXProvider>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\n\nimport { color, ColorMode, hybridColor, mode } from \"../theme/color\";\n\n/**\n * Styled `<span>` component that looks like a pill\n */\nconst Topic = styled.span<{ variant?: \"filled\" | \"hollow\" }>`\n  border-radius: 1000px;\n  padding: 1px 8px;\n  border: 2px solid ${color(\"primary\")};\n  display: inline-block;\n  font-weight: 700;\n  font-size: 0.8rem;\n  color: ${({ variant }): string =>\n    variant === \"filled\" ? color(\"light\") : color(\"text-strong\")};\n\n  ${mode(ColorMode.Light)} {\n    background-color: ${({ variant }): string =>\n      variant === \"filled\"\n        ? hybridColor(\"primary\", ColorMode.Light)\n        : rgba(hybridColor(\"primary\", ColorMode.Light), 0.2)};\n    text-shadow: ${({ variant }): string =>\n      variant === \"filled\" ? \"0 0 4px rgba(0, 0, 0, 0.3)\" : \"none\"};\n  }\n\n  ${mode(ColorMode.Dark)} {\n    background-color: ${({ variant }): string =>\n      variant === \"filled\"\n        ? hybridColor(\"primary\", ColorMode.Dark)\n        : rgba(hybridColor(\"primary\", ColorMode.Dark), 0.4)};\n    text-shadow: ${({ variant }): string =>\n      variant === \"filled\" ? \"0 0 4px rgba(0, 0, 0, 0.7)\" : \"none\"};\n  }\n`;\n\nexport default Topic;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Topic from \"./Topic\";\nimport { gap } from \"../theme/spacing\";\n\nconst Styled = {\n  ProjectTopics: styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: ${gap.femto};\n  `,\n};\n\nexport type ProjectTopicsProps = {\n  main?: string[];\n  secondary?: string[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * List of topics, split into \"main\" and \"secondary\",\n * each represented with a pill in a horizontal, wrapping flexbox.\n */\nexport default function ProjectTopics({\n  main = [],\n  secondary = [],\n  className,\n  style,\n}: ProjectTopicsProps): React.ReactElement {\n  return (\n    <Styled.ProjectTopics className={className} style={style}>\n      {main.map((mainTopic) => (\n        <Topic variant=\"filled\" key={mainTopic}>\n          {mainTopic}\n        </Topic>\n      ))}\n      {secondary.map((secondaryTopic) => (\n        <Topic variant=\"hollow\" key={secondaryTopic}>\n          {secondaryTopic}\n        </Topic>\n      ))}\n    </Styled.ProjectTopics>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\n\nimport { gap } from \"../theme/spacing\";\nimport { color, ColorMode, hybridColor, mode } from \"../theme/color\";\nimport { down } from \"../theme/media\";\nimport { shadow } from \"../theme/shadows\";\nimport { highlightLinks } from \"../theme/mixins\";\n\nconst Styled = {\n  Article: styled.article`\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      margin-top: ${gap.milli};\n    }\n\n    pre,\n    blockquote,\n    hr,\n    table {\n      margin-top: ${gap.milli};\n      margin-bottom: ${gap.milli};\n    }\n\n    p,\n    ol,\n    ul,\n    table,\n    figure {\n      margin-top: ${gap.nano};\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      color: ${color(\"text-strong\")};\n    }\n\n    ul {\n      position: relative;\n      list-style: none;\n      padding-left: 1.5em;\n      margin-left: 0.8em;\n\n      li:before {\n        content: \"\\\\25C6\";\n        font-size: 0.6em;\n        position: absolute;\n        transform: translateY(0.7em);\n        left: 0;\n      }\n    }\n\n    ol {\n      padding-inline-start: 32px;\n\n      & > li {\n        padding-left: 0.65rem;\n      }\n    }\n\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n\n    blockquote {\n      padding: ${gap.micro};\n      border-left: solid 8px ${color(\"primary\")};\n      border-bottom-left-radius: 8px;\n      border-top-left-radius: 8px;\n\n      ${mode(ColorMode.Light)} {\n        background-color: ${rgba(hybridColor(\"primary\", ColorMode.Light), 0.2)};\n      }\n\n      ${mode(ColorMode.Dark)} {\n        background-color: ${rgba(hybridColor(\"primary\", ColorMode.Dark), 0.2)};\n      }\n\n      ${down(\"sm\")} {\n        padding: ${gap.nano};\n      }\n\n      /* This is somewhat risky with Emotion SSR,\n      but as far as I understand that only is a risk\n      if a <style> can be interleaved in the DOM as the first child,\n      which shouldn't happen since neither the block quote or its children\n      are Emotion components (probably) */\n      & > :first-child {\n        margin-top: 0;\n      }\n\n      /* When forced-colors are enabled, manually add a border */\n      @media (forced-colors: active) {\n        /* Add a border to every side except left\n        (it already has a thick border) */\n        border-right: solid 1px;\n        border-bottom: solid 1px;\n        border-top: solid 1px;\n      }\n    }\n\n    table {\n      border-collapse: collapse;\n      border: none;\n      --border-radius: 8px;\n      border-radius: var(--border-radius);\n      box-shadow: ${shadow(\"z2\")};\n\n      thead tr:first-of-type th:first-of-type {\n        border-top-left-radius: var(--border-radius);\n      }\n\n      thead tr:first-of-type th:last-child {\n        border-top-right-radius: var(--border-radius);\n      }\n\n      tbody tr:last-child td:first-of-type {\n        border-bottom-left-radius: var(--border-radius);\n      }\n\n      tbody tr:last-child td:last-child {\n        border-bottom-right-radius: var(--border-radius);\n      }\n\n      /* When forced-colors are enabled, manually add a border\n      (the color is ignored) */\n      @media (forced-colors: active) {\n        border: solid 1px white;\n\n        td,\n        th {\n          border: solid 1px white;\n        }\n      }\n\n      td,\n      th {\n        min-width: 6rem;\n        padding: 0.75rem;\n        vertical-align: top;\n        text-align: left;\n      }\n\n      td:not(:first-of-type),\n      th:not(:first-of-type) {\n        min-width: 8rem;\n      }\n\n      ${down(\"md\")} {\n        td:not(:first-of-type),\n        th:not(:first-of-type) {\n          min-width: 10rem;\n        }\n      }\n\n      tbody {\n        border: none;\n\n        ${mode(ColorMode.Light)} {\n          tr:nth-of-type(2n) {\n            background-color: ${color(\"bg+10\")};\n          }\n\n          tr:nth-of-type(2n + 1) {\n            background-color: ${color(\"bg+5\")};\n          }\n        }\n\n        ${mode(ColorMode.Dark)} {\n          tr:nth-of-type(2n) {\n            background-color: ${color(\"bg+15\")};\n          }\n\n          tr:nth-of-type(2n + 1) {\n            background-color: ${color(\"bg+10\")};\n          }\n        }\n      }\n\n      thead {\n        tr {\n          box-shadow: ${shadow(\"z1\")};\n          z-index: 1;\n          position: relative;\n\n          ${mode(ColorMode.Light)} {\n            background-color: ${color(\"bg+15\")};\n          }\n\n          ${mode(ColorMode.Dark)} {\n            background-color: ${color(\"bg+20\")};\n          }\n        }\n\n        th {\n          font-size: 0.9rem;\n          text-transform: uppercase;\n          color: ${color(\"text-faint\")};\n          letter-spacing: 1px;\n        }\n      }\n\n      td {\n        font-size: 0.9rem;\n        font-weight: 400;\n      }\n    }\n\n    & a {\n      ${highlightLinks}\n    }\n\n    --img-border-radius: 8px;\n\n    img {\n      border-radius: var(--img-border-radius);\n      box-shadow: ${shadow(\"z2\")};\n    }\n\n    .gatsby-resp-image-wrapper {\n      max-width: none !important;\n\n      .gatsby-resp-image-background-image {\n        border-radius: var(--img-border-radius) !important;\n        box-shadow: ${shadow(\"z2\")};\n      }\n    }\n\n    .gatsby-resp-iframe-wrapper {\n      margin-top: ${gap.micro};\n    }\n  `,\n};\n\nexport type ArticleProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Supplies styles to markdown-style content\n * (i.e. headings, anchors, paragraphs, code blocks)\n * in the children.\n */\nexport default function Article({\n  children,\n  className,\n  style,\n}: ArticleProps): React.ReactElement {\n  return (\n    <Styled.Article className={className} style={style}>\n      {children}\n    </Styled.Article>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { gap } from \"../theme/spacing\";\nimport { color } from \"../theme/color\";\n\nconst Styled = {\n  ProjectFields: styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: ${gap.milli};\n    flex-wrap: wrap;\n  `,\n  FieldLabel: styled.p`\n    opacity: 0.65;\n    margin-bottom: -4px;\n  `,\n  FieldValue: styled.p`\n    font-size: 1.1rem;\n    color: ${color(\"text-strong\")};\n  `,\n};\n\nexport type Field = {\n  label: string;\n  value: string;\n};\n\nexport type ProjectFieldsProps = {\n  fields: Field[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Row of fields in a project overview,\n * each consisting of a label and value.\n * Used for start/end dates.\n */\nexport default function ProjectFields({\n  fields,\n  className,\n  style,\n}: ProjectFieldsProps): React.ReactElement {\n  return (\n    <Styled.ProjectFields className={className} style={style}>\n      {fields.map(({ label, value }, i) => (\n        <div key={i}>\n          <Styled.FieldLabel>{label}</Styled.FieldLabel>\n          <Styled.FieldValue>{value}</Styled.FieldValue>\n        </div>\n      ))}\n    </Styled.ProjectFields>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { ButtonFragment } from \"./LinkButton/schema\";\nimport Button from \"./Button\";\nimport Article from \"./Article\";\nimport ProjectFields from \"./ProjectFields\";\nimport ProjectTopics from \"./ProjectTopics\";\nimport { color } from \"../theme/color\";\nimport { gap } from \"../theme/spacing\";\n\nconst Styled = {\n  Type: styled.h2`\n    opacity: 0.85;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 0.95rem;\n    font-weight: 400;\n    margin-bottom: ${gap.atto};\n  `,\n  Title: styled.h1`\n    font-weight: 700;\n    font-size: 2.7rem;\n    line-height: 0.95em;\n    color: ${color(\"text-strong\")};\n    margin-bottom: ${gap.micro};\n  `,\n  Fields: styled(ProjectFields)`\n    margin-bottom: ${gap.micro};\n  `,\n  Lead: styled(Article)`\n    margin-bottom: calc(${gap.micro} + ${gap.pico});\n  `,\n  Topics: styled(ProjectTopics)`\n    margin-bottom: ${gap.milli};\n  `,\n  ButtonBar: styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: ${gap.nano};\n    flex-wrap: wrap;\n  `,\n};\n\nexport type ProjectOverviewProps = {\n  type: string;\n  title: string;\n  start: string;\n  end: string | null;\n  lead: string;\n  mainTopics: string[];\n  secondaryTopics: string[];\n  buttons: ButtonFragment[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Project overview that appears at the top of main project pages\n */\nexport default function ProjectOverview({\n  type,\n  title,\n  start,\n  end,\n  lead,\n  mainTopics,\n  secondaryTopics,\n  buttons,\n  className,\n  style,\n}: ProjectOverviewProps): React.ReactElement {\n  const fields = [{ label: \"Start\", value: start }];\n  if (end != null) {\n    fields.push({ label: \"End\", value: end });\n  }\n\n  return (\n    <div className={className} style={style}>\n      <Styled.Type>{type}</Styled.Type>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Fields fields={fields} />\n      <Styled.Lead>\n        {/* `lead` comes from local markdown files,\n        and is designed to be able to contain HTML */}\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: lead }} />\n      </Styled.Lead>\n      <Styled.Topics main={mainTopics} secondary={secondaryTopics} />\n      <Styled.ButtonBar>\n        {buttons.map((button, i) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <Button key={i} {...button} />\n        ))}\n      </Styled.ButtonBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport BackgroundSVG from \"../images/project-background.inline.svg\";\nimport { down } from \"../theme/media\";\nimport { mode, ColorMode, color } from \"../theme/color\";\n\nconst Styled = {\n  Wrapper: styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    z-index: -1;\n  `,\n  SVG: styled(BackgroundSVG)`\n    --width: 2920px;\n    --height: 700px;\n\n    position: absolute;\n    top: 0;\n    left: calc(50% - var(--width) / 2 - 80px);\n    width: var(--width);\n    height: var(--height);\n\n    ${down(\"lg\")} {\n      /* Fill more height on smaller screens */\n      left: -910px;\n      --width: 3030px;\n      --height: 800px;\n    }\n\n    /* These correspond to calsses in the SVG */\n    .background-piece-1 {\n      ${mode(ColorMode.Light)} {\n        fill: ${color(\"bg-5\")};\n        filter: drop-shadow(0 0 24px rgba(255, 255, 255, 0.3));\n      }\n\n      ${mode(ColorMode.Dark)} {\n        fill: ${color(\"bg+5\")};\n        filter: drop-shadow(0 0 24px rgba(0, 0, 0, 0.2));\n      }\n    }\n\n    .background-piece-2 {\n      ${mode(ColorMode.Light)} {\n        fill: ${color(\"bg-10\")};\n        filter: drop-shadow(0 0 24px rgba(255, 255, 255, 0.3));\n      }\n\n      ${mode(ColorMode.Dark)} {\n        fill: ${color(\"bg+10\")};\n        filter: drop-shadow(0 0 24px rgba(0, 0, 0, 0.2));\n      }\n    }\n\n    /* When forced-colors are enabled, hide the background */\n    @media (forced-colors: active) {\n      display: none;\n    }\n  `,\n};\n\nexport type ProjectBackgroundProps = {\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Large, top-anchored triangles\n * that visually offset the left-aligned project overview.\n * Used on main project pages.\n */\nexport default function ProjectBackground({\n  className,\n  style,\n}: ProjectBackgroundProps): React.ReactElement {\n  return (\n    <Styled.Wrapper className={className} style={style}>\n      <Styled.SVG />\n    </Styled.Wrapper>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nimport Layout from \"../components/Layout\";\nimport Mdx from \"../components/Mdx\";\nimport { ButtonFragment } from \"../components/LinkButton/schema\";\nimport ProjectOverview from \"../components/ProjectOverview\";\nimport ProjectBackground from \"../components/ProjectBackground\";\nimport { gap } from \"../theme/spacing\";\nimport Article from \"../components/Article\";\nimport { container } from \"../theme/layout\";\nimport { color } from \"../theme/color\";\n\nconst Styled = {\n  PageLayout: styled.div`\n    ${container}\n    padding-top: ${gap.micro};\n    padding-bottom: ${gap.kilo};\n  `,\n  ProjectOverview: styled(ProjectOverview)`\n    max-width: 650px;\n    position: relative;\n    padding-top: ${gap.micro};\n    padding-bottom: calc(${gap.milli} + 4px);\n  `,\n  ProjectContent: styled(Article)`\n    & > :last-child {\n      margin-bottom: ${gap.milli};\n    }\n  `,\n  ProjectEndRule: styled.hr`\n    max-width: 100px;\n    margin: ${gap.nano} 0;\n    border-top: 2px solid ${color(\"text\")};\n    margin: 0;\n  `,\n};\n\n// Must stay synchronized with below pageQuery\ntype PageQueryResult = {\n  mdx: {\n    body: string;\n    frontmatter: {\n      shortTitle: string;\n      type: string;\n      title: string;\n      start: string;\n      end?: string | null;\n      lead: string;\n      topics?: {\n        main?: string[] | null;\n        secondary?: string[] | null;\n      } | null;\n      buttons?: ButtonFragment[] | null;\n    };\n  };\n};\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        shortTitle\n        type\n        title\n        start\n        end\n        lead\n        topics {\n          main\n          secondary\n        }\n        buttons {\n          ...Buttons\n        }\n      }\n    }\n  }\n`;\n\nexport type ProjectPageContext = {\n  // Used in page query\n  id: string;\n  isAuxillary: boolean;\n};\n\nexport type ProjectPageTemplateProps = {\n  data: PageQueryResult;\n  pageContext: ProjectPageContext;\n};\n\n/**\n * Page template for any markdown-rendered pages in /projects/**.\n * Handles both main project pages (with the <ProjectOverview>)\n * as well as \"auxillary\" pages that are simple markdown pages.\n */\nexport default function ProjectPageTemplate({\n  data,\n  pageContext,\n}: ProjectPageTemplateProps): React.ReactElement {\n  const { isAuxillary } = pageContext;\n  const { body } = data.mdx;\n  const { shortTitle, type, title, start, end, lead, topics, buttons } =\n    data.mdx.frontmatter;\n\n  return (\n    <Layout title={shortTitle}>\n      {!isAuxillary && <ProjectBackground />}\n      <Styled.PageLayout>\n        {!isAuxillary && (\n          <Styled.ProjectOverview\n            type={type}\n            title={title}\n            start={start}\n            end={end ?? null}\n            lead={lead}\n            mainTopics={topics?.main ?? []}\n            secondaryTopics={topics?.secondary ?? []}\n            buttons={buttons ?? []}\n          />\n        )}\n        <Styled.ProjectContent>\n          <Mdx content={body} />\n        </Styled.ProjectContent>\n        <Styled.ProjectEndRule />\n      </Styled.PageLayout>\n    </Layout>\n  );\n}\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var React = require('react');\n\nfunction ProjectBackgroundInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"className\":\"background-piece-1\",\"d\":\"m 1068.0944,915.59776 c 12.0643,10.34178 29.2,12.5 43.5,5.40001 l 351.6,-175.8 130.6,112.1 c 11.2,9.6 27.2,11.7 40.5,5 L 3356.9687,0.002252 0,0.004162 Z\",\"key\":0}),React.createElement(\"path\",{\"className\":\"background-piece-2\",\"d\":\"m 1867.5944,342.99777 c 11,8.39999 19.9,7.8 29.6,2.8 L 2590.3209,0 1454.5576,0.0016 Z\",\"key\":1})]);\n}\n\nProjectBackgroundInline.defaultProps = {\"version\":\"1.1\",\"viewBox\":\"0 0 3356.9686 925.14413\",\"xmlSpace\":\"preserve\"};\n\nmodule.exports = ProjectBackgroundInline;\n\nProjectBackgroundInline.default = ProjectBackgroundInline;\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","Object","toString","slice","constructor","name","test","Styled","Button","LinkButton","shadow","color","rgba","variant","className","children","rest","derivedChildren","React","child","classNames","scrollBarAuto","shortcodes","Figure","Icon","overrides","pre","CodeBlock","Mdx","content","components","passthroughProps","MDXProvider","useMemo","MDXRenderer","mode","ColorMode","hybridColor","ProjectTopics","gap","main","secondary","style","map","mainTopic","key","secondaryTopic","Article","down","highlightLinks","ProjectFields","FieldLabel","FieldValue","fields","label","value","Type","Title","Fields","Lead","Topics","ButtonBar","ProjectOverview","type","title","start","end","lead","mainTopics","secondaryTopics","buttons","dangerouslySetInnerHTML","__html","button","Wrapper","SVG","BackgroundSVG","ProjectBackground","PageLayout","container","ProjectContent","ProjectEndRule","ProjectPageTemplate","data","isAuxillary","pageContext","body","mdx","frontmatter","shortTitle","topics","Layout","require","useMDXScope","scope","props","mdxScope","End","fullScope","keys","values","fn","ProjectBackgroundInline","createElement","defaultProps","default"],"sourceRoot":""}