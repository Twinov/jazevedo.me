{"version":3,"file":"component---src-pages-projects-tsx-a2f3f1d110071e4a95be.js","mappings":"qOAUMA,EAAS,CACbC,SAAQ,sCACJC,EAAAA,GADG,gBAEUC,EAAAA,EAAAA,MAFV,mBAGaA,EAAAA,EAAAA,KAHb,KAKPC,OAAM,iFAGaD,EAAAA,EAAAA,MAHd,qBAMLE,YAAW,iLAKOF,EAAAA,EAAAA,MALR,oBAMWA,EAAAA,EAAAA,MANX,0CAUVG,aAAa,OAAOA,EAAAA,EAAP,qBAAF,KAmCE,SAASC,EAAT,GAE4B,IACnCC,EADkC,EADxCC,KAEsBC,QAAQC,aAAaC,KAAI,qBAAGC,YAClD,OACE,QAAC,IAAD,CAAQC,MAAM,WAAWC,cAAc,YACrC,QAACf,EAAOC,QAAR,MACE,QAACD,EAAOI,MAAR,kBACA,QAACJ,EAAOK,WAAR,KACGG,EAASI,KAAI,SAACI,EAASC,GAAV,OACZ,QAACjB,EAAOM,YAAR,CAAoBU,QAASA,EAASE,IAAKD","sources":["webpack://jazevedo.me/./src/pages/projects.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport { gap } from \"../theme/spacing\";\nimport { container } from \"../theme/layout\";\nimport { ProjectCardFragment } from \"../components/ProjectCard/types\";\nimport ProjectCard from \"../components/ProjectCard\";\n\nconst Styled = {\n  Content: styled.article`\n    ${container}\n    padding-top: ${gap.milli};\n    padding-bottom: ${gap.kilo};\n  `,\n  Title: styled.h1`\n    font-weight: 900;\n    font-size: 2rem;\n    margin-bottom: ${gap.micro};\n    line-height: 0.9;\n  `,\n  CardLayout: styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-template-rows: repeat(auto-fill, auto);\n    grid-row-gap: ${gap.micro};\n    grid-column-gap: ${gap.micro};\n    grid-auto-flow: row;\n    align-items: start;\n  `,\n  ProjectCard: styled(ProjectCard)``,\n};\n\n// Must stay synchronized with below pageQuery\ntype PageQueryResult = {\n  allFile: {\n    projectFiles: Array<{\n      childMdx: ProjectCardFragment;\n    }>;\n  };\n};\n\nexport const pageQuery = graphql`\n  query {\n    allFile(\n      sort: { fields: [childMdx___frontmatter___importance], order: DESC }\n      limit: 1000\n      filter: {\n        relativePath: { regex: \"/^[^/]+/index.md$/\" }\n        sourceInstanceName: { eq: \"projects\" }\n      }\n    ) {\n      projectFiles: nodes {\n        childMdx {\n          ...ProjectCard\n        }\n      }\n    }\n  }\n`;\n\nexport type ProjectsPageProps = {\n  data: PageQueryResult;\n};\n\nexport default function ProjectsPage({\n  data,\n}: ProjectsPageProps): React.ReactElement {\n  const projects = data.allFile.projectFiles.map(({ childMdx }) => childMdx);\n  return (\n    <Layout title=\"Projects\" headerSpacing=\"compact\">\n      <Styled.Content>\n        <Styled.Title>Projects</Styled.Title>\n        <Styled.CardLayout>\n          {projects.map((project, i) => (\n            <Styled.ProjectCard project={project} key={i} />\n          ))}\n        </Styled.CardLayout>\n      </Styled.Content>\n    </Layout>\n  );\n}\n"],"names":["Styled","Content","container","gap","Title","CardLayout","ProjectCard","ProjectsPage","projects","data","allFile","projectFiles","map","childMdx","title","headerSpacing","project","i","key"],"sourceRoot":""}