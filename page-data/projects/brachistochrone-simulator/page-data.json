{
    "componentChunkName": "component---src-templates-project-tsx",
    "path": "/projects/brachistochrone-simulator",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"importance\": 2,\n  \"type\": \"Java Physics Simulation\",\n  \"shortTitle\": \"Brachistochrone\",\n  \"title\": \"Brachistochrone Simulator\",\n  \"description\": \"Java iterative physics simulator for exploring the historic Brachistochrone Problem originally posed by Johann Bernoulli in 1696\",\n  \"lead\": \"Iterative calculus-based simulation with accompanying <a href=\\\"https://www.lwjgl.org/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">OpenGL-powered</a> graphics display program designed to verify relative performance of different solutions to the historic <a href=\\\"http://mathworld.wolfram.com/BrachistochroneProblem.html\\\" rel=\\\"noopener\\\" target=\\\"_blank\\\">Brachistochrone problem</a>. An accompanying report was written in LaTex which gives simulation results and a mathematical explanation of a rigorous solution.\",\n  \"start\": \"January 2018\",\n  \"end\": \"April 2018\",\n  \"topics\": {\n    \"main\": [\"Java\", \"OpenGL\", \"LWJGL\", \"LaTex\"],\n    \"secondary\": [\"Git\"]\n  },\n  \"icon\": \"useLogo\",\n  \"buttons\": [{\n    \"text\": \"Final Report\",\n    \"href\": \"/projects/brachistochrone-simulator/report.pdf\",\n    \"variant\": \"solid\",\n    \"newTab\": true,\n    \"icon\": \"file-pdf\"\n  }, {\n    \"text\": \"Final Report (Source)\",\n    \"href\": \"https://www.overleaf.com/read/tvjhcnbgtxxh\",\n    \"icon\": \"overleaf\",\n    \"variant\": \"hollow\"\n  }, {\n    \"text\": \"Github\",\n    \"href\": \"https://github.com/jazeved0/BrachistochroneSimulator\",\n    \"variant\": \"hollow\",\n    \"icon\": \"github\"\n  }]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Figure = makeShortcode(\"Figure\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Figure, {\n    caption: \"Demonstration of the hill-climbing portion of the simulation, each iteration moving towards the optimal circular arc path as a potential solution to the Brachistochrone Problem.\",\n    mdxType: \"Figure\"\n  }, mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/projects/brachistochrone-simulator/gif.gif\"\n  }, mdx(\"img\", {\n    parentName: \"a\",\n    \"src\": \"/projects/brachistochrone-simulator/gif.gif\",\n    \"alt\": \"simulation\"\n  })))), mdx(\"h2\", null, \"\\uD83C\\uDFC1 Results\"), mdx(\"p\", null, \"With a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\u0394x\"), \" of 5 meters and a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\u0394y\"), \" of -3 meters, the following results were derived for the time it takes for the mass to get from \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"A\"), \" to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"B\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"t\", mdx(\"sub\", null, \"AB\")), \", in seconds: (Note that for the final results, an extremely small \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"dt\"), \" was used in order to attain a high level of approximation: for this, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"dt\"), \" = 1/960,000 sec or 1.04167 \\xD7 10\", mdx(\"sup\", null, \"-6\"), \")\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Curve\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"th\"\n  }, \"t\", mdx(\"sub\", null, \"AB\")), \" (sec)\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"StraightTrack\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.5116\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"CircularTrack\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.2679\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"CycloidArc\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.2616\")))), mdx(\"p\", null, \"Using basic physics calculations, the time it takes for an object to travel from the start of a 5 \\xD7 3 meter frictionless ramp can be found to be approximately \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1.52031 seconds\"), \", making the predictions derived via simulation supposedly within only a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"0.57%\"), \" error.\"), mdx(\"h2\", null, \"\\uD83D\\uDCC3 Write-Up\"), mdx(\"p\", null, \"A LaTeX document detailing the Brachistochrone problem, one of its solutions, and the results of the computational model is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jazevedo.me/projects/brachistochrone-simulator/report.pdf\"\n  }, \"available here\"), \". It was originally produced to be pasted onto a poster for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.utc.edu/mathematics/pdfs/poster-competition-rules-2018.pdf\"\n  }, \"UTC Mathematics Poster Competition\"), \" in 2018.\"), mdx(\"h2\", null, \"\\uD83D\\uDD17 Dependencies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.lwjgl.org/\"\n  }, \"LWJGL\"), \" - OpenGL bindings and lightweight game engine for Java\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://wiki.lwjgl.org/wiki/Loading_PNG_images_with_TWL's_PNGDecoder.html\"\n  }, \"PNGDecoder\"), \" - Utility class used for loading \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".png\"), \" images into OpenGL for rendering\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"shortTitle":"Brachistochrone","type":"Java Physics Simulation","title":"Brachistochrone Simulator","start":"January 2018","end":"April 2018","lead":"Iterative calculus-based simulation with accompanying <a href=\"https://www.lwjgl.org/\" target=\"_blank\" rel=\"noopener\">OpenGL-powered</a> graphics display program designed to verify relative performance of different solutions to the historic <a href=\"http://mathworld.wolfram.com/BrachistochroneProblem.html\" rel=\"noopener\" target=\"_blank\">Brachistochrone problem</a>. An accompanying report was written in LaTex which gives simulation results and a mathematical explanation of a rigorous solution.","topics":{"main":["Java","OpenGL","LWJGL","LaTex"],"secondary":["Git"]},"buttons":[{"href":"/projects/brachistochrone-simulator/report.pdf","icon":"file-pdf","text":"Final Report","variant":"solid","ariaLabel":null},{"href":"https://www.overleaf.com/read/tvjhcnbgtxxh","icon":"overleaf","text":"Final Report (Source)","variant":"hollow","ariaLabel":null},{"href":"https://github.com/jazeved0/BrachistochroneSimulator","icon":"github","text":"Github","variant":"hollow","ariaLabel":null}]}}},"pageContext":{"id":"a63f27eb-5c86-5561-a116-6301f208dd39","isAuxillary":false}},
    "staticQueryHashes": ["4112786301","412305802","73339943"]}