{
    "componentChunkName": "component---src-templates-project-tsx",
    "path": "/projects/risk-game",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"importance\": 10,\n  \"type\": \"Web App Development\",\n  \"shortTitle\": \"Risk\",\n  \"title\": \"CS 2340 Scala Project: Risk\",\n  \"description\": \"Scala/Play + Vue.js web application providing online Risk, produced for CS 2340 with Professor Simpkins\",\n  \"lead\": \"The frontend is built with Vue.js and HTML Canvases, leveraging the Javascript canvas library <a href=\\\"https://konvajs.org/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Konva</a>, while the backend is built with Play Framework and Akka in Scala. The two sides communicate over a Websocket connection, and the backend features a <a href=\\\"https://riskgame.ga/docs#map-ingestion\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">custom SVG map ingestion pipeline</a> written in Python.\",\n  \"start\": \"January 2019\",\n  \"end\": \"May 2019\",\n  \"topics\": {\n    \"main\": [\"Play/Akka\", \"Scala\", \"Vue.js\", \"Docker\"],\n    \"secondary\": [\"Bootstrap\", \"Git\", \"HTML Canvas\", \"Websocket\", \"Python\", \"Kubernetes\", \"Nginx\", \"Azure\", \"OpenShift\", \"Batchfile\", \"SVG\", \"JSON\"]\n  },\n  \"buttons\": [{\n    \"text\": \"Github\",\n    \"href\": \"https://github.com/jazeved0/cs2340-risk\",\n    \"variant\": \"solid\",\n    \"icon\": \"github\"\n  }]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Icon = makeShortcode(\"Icon\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Demo, {\n    label: \"The interactive gameboard screen map, showing each territory and the \\\nnumber of troops on them. Click or tap and drag to pan, zoom with pinching or \\\nscroll wheel. Left click on a territory to add a single army unit, and right \\\nclick to remove.\",\n    height: 500,\n    scale: 1.65,\n    mdxType: \"Demo\"\n  }), mdx(\"h2\", null, \"Role\"), mdx(\"p\", null, \"For this project, my primary role on the team was lead backend engineer, and I also ended up\\nconfiguring the containerized deployment of our application on a variety of platforms (both\\nwithin orchestration environments and standalone). While I did contribute to the frontend of\\nour application, especially where it concerns overall architecture and program structure, the\\nmajority of my contributions were either to the backend or for deployment.\"), mdx(\"h3\", null, mdx(Icon, {\n    name: \"database\",\n    style: {\n      marginRight: 8\n    },\n    mdxType: \"Icon\"\n  }), \"Backend\"), mdx(\"p\", null, \"Over the course of the project, I was responsible for developing the structure of the application\\u2019s\\nbackend, which, according to the project\\u2019s guidelines, was a\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.playframework.com/\"\n  }, \"Play Framework\"), \" application written\\nin Scala. In addition, we made heavy use of a variety of libraries such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.akka.io/docs/akka/current/stream/index.html\"\n  }, \"Akka Streams\"), \"\\n/\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.akka.io/docs/akka/current/index-actors.html\"\n  }, \"Actors\"), \"\\nto manage Websocket connections\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/google/guice\"\n  }, \"Google Guice\"), \" to\\nprovide runtime dependency injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ben-manes/caffeine\"\n  }, \"Caffeine\"), \" for high\\nperformance caching on the JVM\")), mdx(\"blockquote\", null, mdx(\"h5\", {\n    parentName: \"blockquote\"\n  }, \"Build Pipeline\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A variety of Python, Batchfile, and Bash scripts were made to handle the process of building from\\ncompilation to deployment. Altogether, they automated performing the following high-level tasks:\"), mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Building the map data from SVG to JSON\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Building the frontend using Webpack/Vue CLI\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Building the backend using sbt and packaging it to a zip\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unzipping the built archive and configuring the start script\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Adding additional files, such as data/documentation files\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Building, tagging, and pushing the Docker image\"))), mdx(\"h3\", null, mdx(Icon, {\n    name: \"docker\",\n    style: {\n      marginRight: 12\n    },\n    mdxType: \"Icon\"\n  }), \"Deployment\"), mdx(\"p\", null, \"When it came to running our project in a production environment, I settled on using a Docker\\ncontainer based on an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hub.docker.com/_/openjdk\"\n  }, \"Alpine image\"), \"\\nthat came preloaded with the JRE 8. Initially, I configured deployment for\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.openshift.com/products/online/\"\n  }, \"Redhat\\u2019s OpenShift Online\"), \"\\nbefore switching to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/azure/aks/\"\n  }, \"Microsoft\\u2019s AKS\"), \",\\nboth of which use Kubernetes for orchestration.\"), mdx(\"p\", null, \"While these worked well, they proved to be inadequate for long-term deployment, with even\\nshort term costs proving to be substantial. With this in mind, the final solution ended\\nup being a vanilla Docker environment running on a bare metal Ubuntu server. Additionally,\\nin order to support HTTPS in this environment, I ended up using an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jwilder/nginx-proxy\"\n  }, \"Nginx container acting as\\na reverse proxy\"), \"\\nto handle SSL termination.\"), mdx(\"h2\", null, \"Contributors\"), mdx(\"p\", null, \"The project itself was produced for CS 2340 at Georgia Tech with Professor Christopher\\nSimpkins \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cs2340.gitlab.io/\"\n  }, \"(class website)\"), \",\\nwhere our team consisted of the following members:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Joseph Azevedo \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jazeved0\"\n  }, \"(jazeved0)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Andrew Chafos \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/andrewjc2000\"\n  }, \"(andrewjc2000)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Julian Gu \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/julian-g99\"\n  }, \"(julian-g99)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thomas Lang \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bopas2\"\n  }, \"(bopas2)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Patrick Liu \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PatrickLiu2000\"\n  }, \"(PatrickLiu2000)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"shortTitle":"Risk","type":"Web App Development","title":"CS 2340 Scala Project: Risk","start":"January 2019","end":"May 2019","lead":"The frontend is built with Vue.js and HTML Canvases, leveraging the Javascript canvas library <a href=\"https://konvajs.org/\" target=\"_blank\" rel=\"noopener\">Konva</a>, while the backend is built with Play Framework and Akka in Scala. The two sides communicate over a Websocket connection, and the backend features a <a href=\"https://riskgame.ga/docs#map-ingestion\" target=\"_blank\" rel=\"noopener\">custom SVG map ingestion pipeline</a> written in Python.","topics":{"main":["Play/Akka","Scala","Vue.js","Docker"],"secondary":["Bootstrap","Git","HTML Canvas","Websocket","Python","Kubernetes","Nginx","Azure","OpenShift","Batchfile","SVG","JSON"]},"buttons":[{"href":"https://github.com/jazeved0/cs2340-risk","icon":"github","text":"Github","variant":"solid","ariaLabel":null}]}}},"pageContext":{"id":"2c7faf88-decd-5a31-ae1c-022974a4b160","isAuxillary":false}},
    "staticQueryHashes": ["4112786301","412305802","73339943"]}