{"version":3,"file":"917c220a4367fb2ea6930fc71a4fb468f15c9816-85d8a86de1a40d0e9858.js","mappings":"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","sources":["webpack://jazevedo.me/./node_modules/classnames/index.js","webpack://jazevedo.me/./src/components/Article.tsx","webpack://jazevedo.me/./src/components/Button.tsx","webpack://jazevedo.me/./src/components/Figure.tsx","webpack://jazevedo.me/./src/components/Iframe.tsx","webpack://jazevedo.me/./src/components/ImageLightboxHandler.tsx","webpack://jazevedo.me/./src/components/LinkButton/index.ts","webpack://jazevedo.me/./src/components/CodeBlock.tsx","webpack://jazevedo.me/./src/images/link-icon.raw.svg","webpack://jazevedo.me/./src/components/LinkableHeading.tsx","webpack://jazevedo.me/./src/components/Mdx.tsx","webpack://jazevedo.me/./src/components/Topic.tsx","webpack://jazevedo.me/./src/components/ProjectTopics.tsx","webpack://jazevedo.me/./src/theme/motion.ts","webpack://jazevedo.me/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\n\nimport { gap } from \"../theme/spacing\";\nimport { color, ColorMode, hybridColor, mode } from \"../theme/color\";\nimport { down } from \"../theme/media\";\nimport { shadow } from \"../theme/shadows\";\nimport { highlightLinks } from \"../theme/mixins\";\nimport { iframeClass } from \"./Iframe\";\nimport ImageLightboxHandler from \"./ImageLightboxHandler\";\n\n/**\n * Class name for wrapping an image in a \"card\" (i.e. have a background color\n * and padding outside the image).\n */\nexport const cardImageClass = \"article--card-image\";\n\n/**\n * Class name to signal that all ancestor images should be skipped when adding\n * styles related to adding border radius, box shadow, responsive sizing, etc.\n * This also disables the \"lightbox\" functionality from applying.\n */\nexport const noImageStylesClass = \"article--skip-images\";\n\n/**\n * Class name to opt out of anchor styles on a single anchor element.\n */\nexport const noLinkStylesClass = \"article--skip-link\";\n\nconst Styled = {\n  Article: styled.article`\n    --par-spacing: ${gap.micro};\n    --large-block-spacing: ${gap.milli};\n\n    ${down(\"md\")} {\n      --large-block-spacing: ${gap.micro};\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      margin-top: var(--large-block-spacing);\n      margin-bottom: var(--par-spacing);\n    }\n\n    pre,\n    blockquote,\n    hr,\n    table,\n    figure {\n      margin-bottom: var(--large-block-spacing);\n    }\n\n    figure + figure {\n      ${down(\"md\")} {\n        margin-top: calc(var(--site-padding) - var(--par-spacing));\n      }\n    }\n\n    p,\n    ol,\n    ul {\n      margin-bottom: var(--par-spacing);\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      color: ${color(\"text-strong\")};\n    }\n\n    ul {\n      position: relative;\n      list-style: none;\n      padding-left: 1.5em;\n      margin-left: 0.8em;\n\n      li:before {\n        content: \"\\\\25C6\";\n        font-size: 0.6em;\n        position: absolute;\n        transform: translateY(0.7em);\n        left: 0;\n      }\n    }\n\n    ol {\n      padding-inline-start: 32px;\n\n      & > li {\n        padding-left: 0.65rem;\n      }\n    }\n\n    ul,\n    ol {\n      & > li {\n        & > :last-child {\n          margin-bottom: 0;\n        }\n      }\n\n      &:not(.no-list-spacing) > li {\n        /* Add spacing to the start of each paragraph in a ul or ol,\n        since if it turns into a list of paragraphs, spacing is likely desired.\n        This can be turned off by using a div wrapper with the '.no-list-spacing' class. */\n        &:not(:first-of-type) {\n          & > p {\n            margin-top: var(--par-spacing);\n          }\n        }\n      }\n    }\n\n    blockquote {\n      padding: ${gap.micro};\n      border-left: solid 8px ${color(\"primary\")};\n      border-bottom-left-radius: 8px;\n      border-top-left-radius: 8px;\n\n      ${mode(ColorMode.Light)} {\n        background-color: ${rgba(hybridColor(\"primary\", ColorMode.Light), 0.2)};\n      }\n\n      ${mode(ColorMode.Dark)} {\n        background-color: ${rgba(hybridColor(\"primary\", ColorMode.Dark), 0.2)};\n      }\n\n      ${down(\"sm\")} {\n        padding: ${gap.nano};\n      }\n\n      & > :last-child {\n        margin-bottom: 0;\n      }\n\n      /* When forced-colors are enabled, manually add a border */\n      @media (forced-colors: active) {\n        /* Add a border to every side except left\n        (it already has a thick border) */\n        border-right: solid 1px;\n        border-bottom: solid 1px;\n        border-top: solid 1px;\n      }\n    }\n\n    table {\n      border-collapse: collapse;\n      border: none;\n      --border-radius: 8px;\n      border-radius: var(--border-radius);\n      box-shadow: ${shadow(\"z2\")};\n\n      thead tr:first-of-type th:first-of-type {\n        border-top-left-radius: var(--border-radius);\n      }\n\n      thead tr:first-of-type th:last-child {\n        border-top-right-radius: var(--border-radius);\n      }\n\n      tbody tr:last-child td:first-of-type {\n        border-bottom-left-radius: var(--border-radius);\n      }\n\n      tbody tr:last-child td:last-child {\n        border-bottom-right-radius: var(--border-radius);\n      }\n\n      /* When forced-colors are enabled, manually add a border\n      (the color is ignored) */\n      @media (forced-colors: active) {\n        border: solid 1px white;\n\n        td,\n        th {\n          border: solid 1px white;\n        }\n      }\n\n      td,\n      th {\n        min-width: 6rem;\n        padding: 0.75rem;\n        vertical-align: top;\n        text-align: left;\n      }\n\n      td:not(:first-of-type),\n      th:not(:first-of-type) {\n        min-width: 8rem;\n      }\n\n      ${down(\"md\")} {\n        td:not(:first-of-type),\n        th:not(:first-of-type) {\n          min-width: 10rem;\n        }\n      }\n\n      tbody {\n        border: none;\n\n        ${mode(ColorMode.Light)} {\n          tr:nth-of-type(2n) {\n            background-color: ${color(\"bg+10\")};\n          }\n\n          tr:nth-of-type(2n + 1) {\n            background-color: ${color(\"bg+5\")};\n          }\n        }\n\n        ${mode(ColorMode.Dark)} {\n          tr:nth-of-type(2n) {\n            background-color: ${color(\"bg+15\")};\n          }\n\n          tr:nth-of-type(2n + 1) {\n            background-color: ${color(\"bg+10\")};\n          }\n        }\n      }\n\n      thead {\n        tr {\n          box-shadow: ${shadow(\"z1\")};\n          z-index: 1;\n          position: relative;\n\n          ${mode(ColorMode.Light)} {\n            background-color: ${color(\"bg+15\")};\n          }\n\n          ${mode(ColorMode.Dark)} {\n            background-color: ${color(\"bg+20\")};\n          }\n        }\n\n        th {\n          font-size: 0.9rem;\n          text-transform: uppercase;\n          color: ${color(\"text-faint\")};\n          letter-spacing: 1px;\n        }\n      }\n\n      td {\n        font-size: 0.9rem;\n        font-weight: 400;\n      }\n    }\n\n    & a:not(.gatsby-resp-image-link):not(.${noLinkStylesClass}) {\n      ${highlightLinks}\n    }\n\n    --img-border-radius: 8px;\n    .gatsby-resp-image-wrapper {\n      max-width: none !important;\n      box-shadow: ${shadow(\"z2\")};\n      border-radius: var(--img-border-radius);\n    }\n\n    a.gatsby-resp-image-link {\n      &::after {\n        border-radius: 2px;\n        box-shadow: 0 0 0 8px ${color(\"primary+20\")};\n        content: \"\";\n        height: 100%;\n        left: 0;\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        transition: opacity 0.2s ease-in-out;\n        width: 100%;\n        z-index: 10;\n      }\n\n      &:focus-visible::after {\n        opacity: 1;\n      }\n    }\n\n    .${cardImageClass} {\n      --card-image-padding: ${gap.nano};\n\n      box-shadow: ${shadow(\"z2\")};\n      padding: var(--card-image-padding);\n      background-color: ${color(\"bg+15\")};\n      border-radius: var(--img-border-radius);\n\n      .gatsby-resp-image-wrapper {\n        /* Remove the default box shadow and border radius from the image wrapper */\n        box-shadow: none;\n        border-radius: 0;\n      }\n    }\n\n    /* Add a border radius and box shadow to children that are not inside a\n    paragraph. To opt out, wrap the image with a 'noImageStylesClass' ancestor\n    div. */\n    & img {\n      &:not(p img):not(.${noImageStylesClass} img) {\n        border-radius: var(--img-border-radius);\n        display: block;\n\n        /* If the image is not a Gatsby responsive image, make it responsive\n        and add the box shadow */\n        &:not(.gatsby-resp-image-image) {\n          width: 100%;\n          box-shadow: ${shadow(\"z2\")};\n        }\n      }\n    }\n\n    .${iframeClass} {\n      margin-top: ${gap.micro};\n      border-radius: var(--img-border-radius);\n      box-shadow: ${shadow(\"z2\")};\n    }\n  `,\n};\n\nexport type ArticleProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Supplies styles to markdown-style content\n * (i.e. headings, anchors, paragraphs, code blocks)\n * in the children.\n */\nexport default function Article({\n  children,\n  className,\n  style,\n}: ArticleProps): React.ReactElement {\n  const ref = useRef<HTMLDivElement>(null);\n  return (\n    <Styled.Article className={className} style={style} ref={ref}>\n      {children}\n      <ImageLightboxHandler parentRef={ref} />\n    </Styled.Article>\n  );\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\nimport classNames from \"classnames\";\n\nimport { color } from \"../theme/color\";\nimport { shadow } from \"../theme/shadows\";\nimport LinkButton from \"./LinkButton\";\nimport { LinkButtonProps } from \"./LinkButton/LinkButton\";\n\nconst Styled = {\n  Button: styled(LinkButton)`\n    position: relative;\n    text-decoration: none;\n    border-radius: 4px;\n\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n      display: block !important;\n    }\n\n    box-shadow: ${shadow(\"z1\")};\n    --highlight-bg: transparent;\n    --border-size: 0px;\n\n    &.variant-solid {\n      background-color: ${color(\"primary\")};\n      color: ${color(\"light\")};\n\n      &:hover {\n        --highlight-bg: ${color(\"primary+10\")};\n      }\n\n      &:active {\n        --highlight-bg: ${color(\"primary-10\")};\n      }\n    }\n\n    &.variant-hollow {\n      background-color: ${rgba(color(\"light\"), 0.1)};\n      color: ${color(\"text-strong\")};\n      --border-size: 2px;\n\n      &:hover {\n        --highlight-bg: ${rgba(color(\"light\"), 0.1)};\n      }\n\n      &:active {\n        --highlight-bg: ${rgba(color(\"light\"), 0.2)};\n      }\n    }\n\n    padding-top: calc(var(--y-padding) - calc(var(--border-size) * 2));\n    padding-bottom: calc(var(--y-padding) - calc(var(--border-size) * 2));\n    padding-left: calc(var(--x-padding) - calc(var(--border-size) * 2));\n    padding-right: calc(var(--x-padding) - calc(var(--border-size) * 2));\n    border: var(--border-size) solid ${color(\"primary\")};\n\n    &:hover {\n      box-shadow: ${shadow(\"z2\")};\n    }\n\n    &:active {\n      box-shadow: ${shadow(\"z0\")};\n    }\n\n    /* Use an absolutely positioned pseudo-element\n    that animates between transparent and opaque\n    to simulate the <Button> having a background color transition\n    without creating an ugly transition upon changing themes */\n    &::before {\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: 100%;\n      content: \" \";\n      transition: 0.1s background-color linear;\n      background-color: var(--highlight-bg);\n      border-radius: 4px;\n      z-index: 0;\n    }\n\n    & > * {\n      /* Ensure the pseudo-element is positioned below the content\n      by creating a new stacking context for the content.\n      This relies on always wrapping children in a span.\n      We do this manually in <Button> for direct children,\n      and for <LinkButton>, the text and icon props\n      automatically get wrapped */\n      position: relative;\n    }\n\n    /* When forced-colors are enabled, add a border to improve the contrast\n    of the hit target (the color is ignored). Additionally, add an underline on\n    hover to improve the readability of the states. */\n    @media (forced-colors: active) {\n      border: 2px solid white;\n\n      &:hover,\n      &:active {\n        text-decoration: underline;\n      }\n    }\n  `,\n};\n\nexport type ButtonSize = \"small\" | \"regular\";\n\n/**\n * Style to apply to a <Button> based on its size.\n *\n * This is applied automatically by <Button> based on the `size` prop.\n * These are also exported so that they can be used by other components\n * in advanced selectors.\n */\nexport const buttonSizeStyles: Record<\n  ButtonSize,\n  // Use `Record<string, CSSProperties[keyof CSSProperties]>` instead of\n  // `CSSProperties` because the latter doesn't allow for CSS custom variable\n  // properties (`--*`):\n  Record<string, React.CSSProperties[keyof React.CSSProperties]>\n> = {\n  small: {\n    \"--x-padding\": \"10px\",\n    \"--y-padding\": \"6px\",\n    fontSize: \"0.75rem\",\n  },\n  regular: {\n    \"--x-padding\": \"15px\",\n    \"--y-padding\": \"8px\",\n  },\n};\n\nexport type ButtonProps = LinkButtonProps & {\n  variant?: \"solid\" | \"hollow\" | null;\n  size?: \"small\" | \"regular\";\n};\n\n/**\n * Styled `<LinkButton>` component that looks like a traditional button\n */\nexport default function Button({\n  variant,\n  className,\n  children,\n  style,\n  ...rest\n}: ButtonProps): React.ReactElement {\n  // Manually wrap any text nodes with a <span> element\n  // to ensure that the pseudo-element stacking order works.\n  const derivedChildren = React.Children.map(\n    children,\n    (child): React.ReactNode => {\n      if (typeof child === \"string\") return <span>{child}</span>;\n      return child;\n    }\n  );\n\n  return (\n    <Styled.Button\n      className={classNames(className, `variant-${variant ?? \"solid\"}`)}\n      style={{\n        ...buttonSizeStyles[rest.size ?? \"regular\"],\n        ...style,\n      }}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    >\n      {derivedChildren}\n    </Styled.Button>\n  );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styled from \"@emotion/styled\";\n\nimport { color } from \"../theme/color\";\nimport { shadow } from \"../theme/shadows\";\nimport { noImageStylesClass } from \"./Article\";\nimport ImageLightboxHandler from \"./ImageLightboxHandler\";\n\nconst Styled = {\n  Figure: styled.figure`\n    /* Make the figure as wide as the contained image, if any:\n    https://stackoverflow.com/a/19113067\n    This is only needed if 'size-to-content' is set on the figure,\n    but it's easier to use the same strategy all the time and just set\n    'width: 100%' when 'size-to-content' is not set. (causing the figure to fully\n    expand, subject to max-width).\n    This means that to get a background, border radius, and box-shadow\n    around the caption and figure together, each needs to be applied separately. */\n    display: table;\n    --figure-background-color: ${color(\"bg+15\")};\n    --figure-border-radius: var(--img-border-radius);\n    --figure-box-shadow: ${shadow(\"z2\")};\n\n    &:not(.size-to-content) {\n      /* Make the figure as wide as the surroundings, subject to any max-width\n      set on the figure itself. */\n      width: 100%;\n    }\n\n    /* Apply common styles to the \"display-table\" part of the figure\n    (i.e. figure, excluding the caption).\n    This will have a top rounded border, but a bottom square border. */\n    background-color: var(--figure-background-color);\n    border-top-left-radius: var(--figure-border-radius);\n    border-top-right-radius: var(--figure-border-radius);\n    box-shadow: var(--figure-box-shadow);\n\n    position: relative;\n\n    /* Fix a link inside figure content, containing an image, from taking up\n    its own vertical space and showing a sliver of its background. */\n    & > a > img {\n      display: block;\n    }\n\n    /* Apply a default style to each image block child */\n    & img {\n      &:not(p img):not(.${noImageStylesClass} img) {\n        border-radius: 0;\n      }\n    }\n\n    /* Select the first child.\n    HACK: use workaround for Emotion 10 not supporting :first-child:\n    https://github.com/emotion-js/emotion/issues/1105#issuecomment-1126025608 */\n    & > :first-of-type:not(style):not(:first-of-type ~ *),\n    & > style + * {\n      /* Make the first image in the figure have a top rounded border. */\n      & img,\n      &:is(img) {\n        &:not(p img):not(.${noImageStylesClass} img) {\n          border-top-left-radius: var(--figure-border-radius);\n          border-top-right-radius: var(--figure-border-radius);\n        }\n      }\n\n      /* Ensure that the Gatsby responsive image wrapper also has the\n      same styles applied, so that the blurred placeholder image does not\n      go out of the border radius bounds: */\n      & a.gatsby-resp-image-link,\n      a.gatsby-resp-image-link,\n      & .gatsby-resp-image-wrapper,\n      &.gatsby-resp-image-wrapper,\n      & .gatsby-resp-image-background-image,\n      &.gatsby-resp-image-background-image {\n        border-top-left-radius: var(--figure-border-radius);\n        border-top-right-radius: var(--figure-border-radius);\n      }\n    }\n\n    /* Make child images that are not inside a paragraph responsive. To opt\n    out, wrap the image with a 'noImageStylesClass' ancestor div. */\n    & img {\n      &:not(p img):not(.${noImageStylesClass} img) {\n        /* If the image is not a Gatsby responsive image, make it responsive */\n        &:not(.gatsby-resp-image-image) {\n          width: 100%;\n        }\n      }\n    }\n\n    /* Style the caption */\n    figcaption {\n      display: table-caption;\n      caption-side: bottom;\n\n      /* Apply common styles to the \"display-table-caption\" part of the figure\n      (i.e. the figure, excluding the content).\n      This will have a bottom rounded border, but a top square border. */\n      background-color: var(--figure-background-color);\n      border-bottom-left-radius: var(--figure-border-radius);\n      border-bottom-right-radius: var(--figure-border-radius);\n      box-shadow: var(--figure-box-shadow);\n\n      padding: 10px 16px;\n      color: ${color(\"text\")};\n\n      /* Ensure that this is on top of the figure, so that the box-shadow\n      from the content of the figure is not visible */\n      position: relative;\n      z-index: 1;\n\n      /* When forced-colors are enabled, manually add a border\n      (the color is ignored) */\n      @media (forced-colors: active) {\n        border: solid 1px white;\n      }\n\n      & > :last-child {\n        /* Remove the margin-bottom from the last child of the figure caption */\n        margin-bottom: 0;\n      }\n    }\n\n    & > :last-child {\n      /* Remove the margin-bottom from the last child of the figure */\n      margin-bottom: 0;\n    }\n\n    &.centered {\n      margin-left: auto;\n      margin-right: auto;\n    }\n\n    & .gatsby-resp-image-wrapper:not(#__increase_specificity) {\n      /* Remove the default box shadow and border radius */\n      box-shadow: none;\n      /* This will get overridden by the first-child selector above */\n      border-radius: 0;\n    }\n  `,\n};\n\nexport type FigureProps = {\n  children?: React.ReactNode;\n  centered?: boolean;\n  sizeToContent?: boolean;\n  maxWidth?: number;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nexport default function Figure({\n  children,\n  centered = false,\n  sizeToContent = false,\n  maxWidth = 1260,\n  className,\n  style,\n}: FigureProps): React.ReactElement {\n  // HACK: search the children for the `figcaption` element, if it exists.\n  // It must be a direct child of this component.\n  let caption: React.ReactNode | undefined;\n  React.Children.forEach(children, (child) => {\n    if (React.isValidElement(child) && child.type === \"figcaption\") {\n      caption = child;\n    }\n  });\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  return (\n    <>\n      <Styled.Figure\n        className={classNames(className, {\n          centered,\n          \"size-to-content\": sizeToContent,\n        })}\n        style={{ maxWidth, ...style }}\n        ref={ref}\n      >\n        {children}\n      </Styled.Figure>\n      <ImageLightboxHandler parentRef={ref} captionChildren={caption} />\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nconst Styled = {\n  Wrapper: styled.div`\n    position: relative;\n    height: 0;\n    overflow: hidden;\n  `,\n  Iframe: styled.iframe`\n    border: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  `,\n};\n\n/**\n * CSS Class to target iframe wrapper elements in `<Article />` components.\n */\nexport const iframeClass = \"iframe--article-block\";\n\nexport type IframeProps = {\n  src: string;\n  className?: string;\n  style?: React.CSSProperties;\n  width: number;\n  height: number;\n  allowFullScreen?: boolean;\n};\n\n/**\n * Responsive iframe wrapper.\n */\nexport default function Iframe({\n  src,\n  className,\n  style,\n  width,\n  height,\n  allowFullScreen = false,\n}: IframeProps): React.ReactElement {\n  return (\n    <Styled.Wrapper\n      style={{\n        width: \"100%\",\n        maxWidth: \"none\",\n        paddingBottom: `${(height / width) * 100}%`,\n        ...style,\n      }}\n      className={classNames(iframeClass, className)}\n    >\n      <Styled.Iframe\n        src={src}\n        width={width}\n        height={height}\n        allowFullScreen={allowFullScreen}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...({\n          mozallowfullscreen: allowFullScreen,\n          webkitallowfullscreen: allowFullScreen,\n        } as React.IframeHTMLAttributes<HTMLIFrameElement>)}\n      />\n    </Styled.Wrapper>\n  );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\n\n// Must only `import type` from Lightbox, since it should be bundle-split:\nimport type { LightboxImage } from \"./Lightbox\";\nimport { noImageStylesClass } from \"./Article\";\n\n/**\n * A class that can be added to a parent element to opt out of the default\n * behavior of adding lightbox functionality to all images under that element.\n */\nexport const noImageLightboxClass = \"no-lightbox-descendent-imgs\";\n\nasync function requestLowPriority(): Promise<void> {\n  if (\"requestIdleCallback\" in window) {\n    return new Promise((resolve) => {\n      window.requestIdleCallback(() => resolve(), { timeout: 2000 });\n    });\n  } else {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(), 500);\n    });\n  }\n}\n\nconst LazyLightbox = React.lazy(async () => {\n  // Load the Lightbox component asynchronously, at a low priority.\n  if (typeof window !== \"undefined\") {\n    await requestLowPriority();\n  }\n  const Lightbox = await import(\"./Lightbox\");\n  return Lightbox;\n});\n\nexport type ImageLightboxHandlerProps = {\n  parentRef: React.RefObject<HTMLElement | null>;\n  captionChildren?: React.ReactNode;\n};\n\n/**\n * A component that adds lightbox functionality to all images under the given\n * parent element, that pass a set of heuristics.\n *\n * This uses a jQuery-esque strategy that attaches onClick handlers to the\n * matching images or links in an effect (instead of using a component per\n * image). These will be attached on the initial render.\n *\n * It also defers loading the bundle for the lightbox to be low-priority.\n *\n * If another lightbox handler already attached to a given image/link element,\n * the element will be skipped.\n */\nexport default function ImageLightboxHandler({\n  parentRef,\n  captionChildren,\n}: ImageLightboxHandlerProps): React.ReactElement {\n  const [activeImage, setActiveImage] = useState<LightboxImage | null>(null);\n  const openLightbox = useCallback(\n    (src: string, aspectRatio: number): void => {\n      setActiveImage({ src, aspectRatio });\n    },\n    [setActiveImage]\n  );\n\n  // Attach event listeners\n  useEffect(() => {\n    type AttachedHandler = [\n      element: Element,\n      event: string,\n      handler: EventListener\n    ];\n    const attachedHandlers: AttachedHandler[] = [];\n    const parent = parentRef.current;\n    if (parent !== null) {\n      // There are 2 types of images to handle:\n      // 1. Gatsby responsive images\n      // 2. Regular images\n      //\n      // Additionally, there are 2 types of nesting patterns to handle:\n      // 1. The image is a descendant of a link (preferred, since it facilitates\n      //    graceful degradation if JS is disabled). In this case, the link\n      //    itself should be the target for the onClick handler.\n      // 2. The image is not a descendant of a link.\n      //\n      // For Gatsby responsive images, Gatsby automatically wraps a link around\n      // the image if it is not already wrapped in a link, so it's not possible\n      // to have a Gatsby responsive image that is not a descendant of a link\n      // (at least with the current config of the site).\n      //\n      // If an image is not a descendant of a link (meaning it is a regular\n      // image), it will always have lightbox functionality attached, and the\n      // `src` attribute of the image will be used as the full-scale URL.\n      //\n      // if an image is a descendant of a link, it will only have lightbox\n      // functionality attached if the link has a `href` attribute, and the\n      // `href` attribute points to an \"image-like\" URL (ending in an image\n      // extension).\n\n      // To start with, look for all images that are descendants of the parent\n      // and:\n      // - do not have a paragraph element (<p>) ancestor\n      // - do not have an ancestor with the 'noImageStyleClass' class\n      // - do not have an ancestor with the 'noImageLightboxClass' class\n\n      const selector = `img:not(p img):not(.${noImageLightboxClass} img):not(.${noImageStylesClass} img)`;\n      const candidates = Array.from(parent.querySelectorAll(selector)).filter(\n        (elem): elem is HTMLImageElement => elem instanceof HTMLImageElement\n      );\n\n      type AttachmentProps = {\n        targetElement: Element;\n        fullScaleUrl: string;\n      };\n      const attachmentProps: AttachmentProps[] = candidates.flatMap(\n        (imageElement): AttachmentProps[] => {\n          // Determine if the image is a descendant of a link, and if it is\n          // grab a reference to the closest link ancestor.\n          let linkAncestor: HTMLAnchorElement | null =\n            imageElement.closest(\"a\");\n          if (!parent.contains(linkAncestor)) {\n            linkAncestor = null;\n          }\n\n          if (linkAncestor === null) {\n            const { src } = imageElement;\n            if (\n              src !== \"\" &&\n              imageElement.getAttribute(\"data-has-lightbox\") !== \"true\"\n            ) {\n              return [\n                {\n                  targetElement: imageElement,\n                  fullScaleUrl: src,\n                },\n              ];\n            }\n          } else {\n            const { href } = linkAncestor;\n            if (\n              href !== \"\" &&\n              isImageLikeUrl(href) &&\n              linkAncestor.getAttribute(\"data-has-lightbox\") !== \"true\"\n            ) {\n              return [\n                {\n                  targetElement: linkAncestor,\n                  fullScaleUrl: href,\n                },\n              ];\n            }\n          }\n\n          return [];\n        }\n      );\n\n      attachmentProps.forEach(({ targetElement, fullScaleUrl }) => {\n        const handler: EventListener = (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          const bounds = targetElement.getBoundingClientRect();\n          openLightbox(fullScaleUrl, bounds.width / bounds.height);\n        };\n\n        targetElement.addEventListener(\"click\", handler);\n        targetElement.setAttribute(\"data-has-lightbox\", \"true\");\n        attachedHandlers.push([targetElement, \"click\", handler]);\n      });\n    }\n\n    // Cleanup function\n    return (): void => {\n      attachedHandlers.forEach(([element, event, handler]) => {\n        element.removeEventListener(event, handler);\n        element.removeAttribute(\"data-has-lightbox\");\n      });\n    };\n  }, [openLightbox, parentRef]);\n\n  return (\n    <Suspense fallback={null}>\n      <LazyLightbox\n        image={activeImage}\n        captionChildren={captionChildren}\n        onClose={(): void => {\n          setActiveImage(null);\n        }}\n      />\n    </Suspense>\n  );\n}\n\nconst imageExtensions = new Set([\n  \"apng\",\n  \"avif\",\n  \"gif\",\n  \"jpg\",\n  \"jpeg\",\n  \"png\",\n  \"svg\",\n  \"webp\",\n  \"tif\",\n  \"tiff\",\n]);\n\nfunction isImageLikeUrl(url: string): boolean {\n  try {\n    const urlObj = new URL(url);\n    const path = urlObj.pathname;\n    const extension = path.substring(path.lastIndexOf(\".\") + 1);\n    return imageExtensions.has(extension);\n  } catch (e) {\n    return false;\n  }\n}\n","import LinkButton from \"./LinkButton\";\n\nexport default LinkButton;\n","import styled from \"@emotion/styled\";\n\nimport { scrollBarAuto } from \"../theme/mixins\";\n\n/**\n * Styled `<pre>` element that automatically styles Prism-highlighted content.\n */\nconst CodeBlock = styled.pre`\n  position: relative;\n  margin: 0;\n\n  /* Important required to override one-{dark,light} theme files:\n  (included in /src/components/GlobalCss.tsx) */\n  padding: 0 !important;\n  background-color: transparent !important;\n\n  & > code {\n    font-size: 1rem;\n  }\n\n  ${scrollBarAuto(0.125)}\n  overflow: auto;\n\n  /* When forced-colors are enabled, the pre element already has a border\n  (due to the invisible 1px border added in the one-{dark,light} theme files).\n  Add padding internal to the element to improve the aesthetics of the border. */\n  @media (forced-colors: active) {\n    /* Important required to override above important: */\n    padding: 16px !important;\n  }\n`;\n\nexport default CodeBlock;\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\">\\n  <path style=\\\"fill:currentColor;\\\"\\n    d=\\\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84 -9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026 -28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2 -67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564 -10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348 -21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584 -1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261 -59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196 c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094 -19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005 -6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2 -67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934 -1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606 l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\\\" />\\n</svg>\\n\";","import React, { useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport classNames from \"classnames\";\n\nimport { useInitialRender } from \"../hooks\";\nimport { down, up } from \"../theme/media\";\nimport { transition } from \"../theme/motion\";\nimport { gap } from \"../theme/spacing\";\nimport { HashLocationContext } from \"./HashLocationProvider\";\nimport { ColorMode, hybridColor, mode } from \"../theme/color\";\nimport { noLinkStylesClass } from \"./Article\";\n\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/order, import/no-unresolved\nimport linkIconRawSvg from \"!!raw-loader!../images/link-icon.raw.svg\";\n\nconst rightLink = \"right\";\nconst rightMixin = `\n  margin-left: 0.5em;\n  display: inline-block;\n`;\nconst leftMixin = `\n  position: absolute;\n  margin-left: -1em;\n  padding-right: 0.5em;\n  transform: translateX(-8px);\n\n  span {\n      vertical-align: -0.4em;\n  }\n`;\nconst rightActiveMixin = `transform: translateX(0.25em);`;\nconst leftActiveMixin = `margin-left: -1.125em !important;`;\nconst moveBreakpoint = \"xxl\";\n\nconst IconWrapper = styled.span`\n  font-style: normal;\n  font-variant: normal;\n  font-weight: normal;\n  font-stretch: normal;\n  font-size: 1em;\n  line-height: inherit;\n  border: none !important;\n  font-size: 70%;\n  left: 0;\n  transform: none;\n\n  ${transition([\"opacity\", \"transform\"], { important: true })};\n  opacity: 0;\n\n  &:not(.${rightLink}) {\n    ${down(moveBreakpoint)} {\n      ${rightMixin}\n    }\n    ${up(moveBreakpoint)} {\n      ${leftMixin}\n    }\n  }\n\n  &.${rightLink} {\n    ${rightMixin}\n  }\n`;\n\nfunction svgDataUrl(svg: string): string {\n  return `url(\"data:image/svg+xml,${encodeURIComponent(svg)}\");`;\n}\n\nconst activeClass = \"active\";\nconst Styled = {\n  LinkIcon: styled.span`\n    ${mode(ColorMode.Dark)} {\n      background-image: ${svgDataUrl(\n        linkIconRawSvg.replace(\n          \"fill:currentColor;\",\n          `fill:${hybridColor(\"primary+30\", ColorMode.Dark)};`\n        )\n      )};\n    }\n    ${mode(ColorMode.Light)} {\n      background-image: ${svgDataUrl(\n        linkIconRawSvg.replace(\n          \"fill:currentColor;\",\n          `fill:${hybridColor(\"primary+20\", ColorMode.Light)};`\n        )\n      )};\n    }\n\n    height: 1em;\n    width: 1em;\n    display: inline-block;\n    background-repeat: no-repeat;\n  `,\n  IconWrapper,\n  AnchorWrapper: styled.a`\n    display: block;\n    position: relative;\n    text-decoration: none;\n    color: currentColor;\n\n    &:active,\n    &.${activeClass} {\n      & ${IconWrapper} {\n        opacity: 0.9 !important;\n      }\n    }\n\n    &:hover,\n    &:focus,\n    &.${activeClass} {\n      & ${IconWrapper} {\n        opacity: 0.5;\n\n        &:not(.${rightLink}) {\n          ${down(moveBreakpoint)} {\n            ${rightActiveMixin}\n          }\n          ${up(moveBreakpoint)} {\n            ${leftActiveMixin}\n          }\n        }\n\n        &.${rightLink} {\n          ${rightActiveMixin}\n        }\n      }\n    }\n  `,\n  Anchor: styled.div`\n    position: absolute;\n    left: 0;\n    top: -${gap.micro};\n  `,\n};\n\nexport type HeadingType = \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\ntype BaseComponent = React.ComponentType<HeadingProps> | HeadingType;\nexport type HeadingProps = React.HTMLAttributes<HTMLHeadingElement>;\n\n/**\n * Component factory to create a LinkableHeading component, which shows a\n * heading with a clickable link and a corresponding anchor (generated based\n * on the heading's text content).\n *\n * The ID generation is done in the `rehype-slug` plugin.\n */\nexport function createLinkableHeading({\n  component: Component,\n  right,\n}: {\n  component: BaseComponent;\n  right?: boolean;\n}): React.ComponentType<HeadingProps> {\n  function HeadingComponent({\n    children,\n    id,\n    className,\n    style,\n    ...rest\n  }: HeadingProps): React.ReactElement {\n    const hash = useContext(HashLocationContext);\n    const firstRender = useInitialRender();\n\n    if (id == null) {\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      return <Component {...rest}>{children}</Component>;\n    }\n\n    const active = !firstRender && hash === `#${id ?? \"\"}`;\n    return (\n      <Styled.AnchorWrapper\n        className={classNames(\n          className,\n          active && activeClass,\n          noLinkStylesClass\n        )}\n        style={style}\n        href={`#${id}`}\n      >\n        <Styled.Anchor id={id}> </Styled.Anchor>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <Component {...rest}>\n          {children}\n          <Styled.IconWrapper data-placement={right ? \"right\" : \"left\"}>\n            <Styled.LinkIcon />\n          </Styled.IconWrapper>\n        </Component>\n      </Styled.AnchorWrapper>\n    );\n  }\n  const displayName = `Heading-${String(Component)}`;\n  HeadingComponent.displayName = displayName;\n  Object.defineProperty(HeadingComponent, \"name\", { value: displayName });\n  return HeadingComponent;\n}\n","import { MDXProvider } from \"@mdx-js/react\";\nimport React, { useMemo } from \"react\";\nimport type { MDXComponents } from \"mdx/types\";\n\nimport Figure from \"./Figure\";\nimport Icon from \"./Icon\";\nimport LinkButton from \"./LinkButton/LinkButton\";\nimport CodeBlock from \"./CodeBlock\";\nimport Iframe from \"./Iframe\";\nimport { createLinkableHeading } from \"./LinkableHeading\";\n\n// Shortcodes available to MDX content\nexport const shortcodes: MDXComponents = {\n  Figure,\n  Icon,\n  Iframe,\n} as const;\n\n// React components that replace HTML components in the markdown\nexport const overrides: MDXComponents = {\n  a: LinkButton as React.ComponentType<JSX.IntrinsicElements[\"a\"]>,\n  pre: CodeBlock as React.ComponentType<JSX.IntrinsicElements[\"pre\"]>,\n};\n\nconst linkableHeadingShortcodes: MDXComponents = {\n  h1: createLinkableHeading({ component: \"h1\" }),\n  h2: createLinkableHeading({ component: \"h2\" }),\n  h3: createLinkableHeading({ component: \"h3\" }),\n  h4: createLinkableHeading({ component: \"h4\" }),\n  h5: createLinkableHeading({ component: \"h5\" }),\n  h6: createLinkableHeading({ component: \"h6\" }),\n};\n\nexport type MdxProps = {\n  children: React.ReactNode;\n  components?: MDXComponents;\n  linkableHeadings?: boolean;\n};\n\n/**\n * MDX component provider, including shortcodes used when writing MDX\n */\nexport default function Mdx({\n  children,\n  components,\n  linkableHeadings = false,\n}: MdxProps): React.ReactElement {\n  const componentsMemo = useMemo<MDXComponents>(\n    () => ({\n      ...shortcodes,\n      ...overrides,\n      ...components,\n      ...(linkableHeadings ? linkableHeadingShortcodes : {}),\n    }),\n    [components, linkableHeadings]\n  );\n  return <MDXProvider components={componentsMemo}>{children}</MDXProvider>;\n}\n","import styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\n\nimport { color, ColorMode, hybridColor, mode } from \"../theme/color\";\n\n/**\n * Styled `<span>` component that looks like a pill\n */\nconst Topic = styled.span<{ variant?: \"filled\" | \"hollow\" }>`\n  border-radius: 1000px;\n  padding: 1px 8px;\n  border: 2px solid ${color(\"primary\")};\n  display: inline-block;\n  font-weight: 700;\n  font-size: 0.8rem;\n  color: ${({ variant }): string =>\n    variant === \"filled\" ? color(\"light\") : color(\"text-strong\")};\n\n  ${mode(ColorMode.Light)} {\n    background-color: ${({ variant }): string =>\n      variant === \"filled\"\n        ? hybridColor(\"primary\", ColorMode.Light)\n        : rgba(hybridColor(\"primary\", ColorMode.Light), 0.2)};\n    text-shadow: ${({ variant }): string =>\n      variant === \"filled\" ? \"0 0 4px rgba(0, 0, 0, 0.3)\" : \"none\"};\n  }\n\n  ${mode(ColorMode.Dark)} {\n    background-color: ${({ variant }): string =>\n      variant === \"filled\"\n        ? hybridColor(\"primary\", ColorMode.Dark)\n        : rgba(hybridColor(\"primary\", ColorMode.Dark), 0.4)};\n    text-shadow: ${({ variant }): string =>\n      variant === \"filled\" ? \"0 0 4px rgba(0, 0, 0, 0.7)\" : \"none\"};\n  }\n`;\n\nexport default Topic;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Topic from \"./Topic\";\nimport { gap } from \"../theme/spacing\";\n\nconst Styled = {\n  ProjectTopics: styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: ${gap.femto};\n  `,\n};\n\nexport type ProjectTopicsProps = {\n  main?: string[];\n  secondary?: string[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * List of topics, split into \"main\" and \"secondary\",\n * each represented with a pill in a horizontal, wrapping flexbox.\n */\nexport default function ProjectTopics({\n  main = [],\n  secondary = [],\n  className,\n  style,\n}: ProjectTopicsProps): React.ReactElement {\n  return (\n    <Styled.ProjectTopics className={className} style={style}>\n      {main.map((mainTopic) => (\n        <Topic variant=\"filled\" key={mainTopic}>\n          {mainTopic}\n        </Topic>\n      ))}\n      {secondary.map((secondaryTopic) => (\n        <Topic variant=\"hollow\" key={secondaryTopic}>\n          {secondaryTopic}\n        </Topic>\n      ))}\n    </Styled.ProjectTopics>\n  );\n}\n","/**\n * Default easing function\n */\nexport const ease = \"cubic-bezier(0.25, 0.1, 0.25, 1)\";\n\n/**\n * Easing function go go slightly further at the end and go back\n */\nexport const easeOutBack = \"cubic-bezier(0.175, 0.9, 0.3, 1.065)\";\n\n/**\n * Speed of a given transition\n */\nexport enum TransitionSpeed {\n  Fast = 125,\n  Normal = 200,\n  Slow = 400,\n}\n\n/**\n * Convenience function to build a base transition **block** for the given\n * properties\n * @param properties - transition properties\n */\nexport function transition(\n  properties: string[],\n  {\n    speed = TransitionSpeed.Normal,\n    important = false,\n  }: { speed?: TransitionSpeed; important?: boolean } = {}\n): string {\n  const suffix = important ? \" !important\" : \"\";\n  return `\n    transition-property: ${properties.join(\",\")}${suffix};\n    transition-timing-function: ${ease}${suffix};\n    transition-duration: ${speed}ms${suffix};\n  `;\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","cardImageClass","noImageStylesClass","noLinkStylesClass","Styled","Article","gap","down","color","mode","ColorMode","rgba","hybridColor","shadow","highlightLinks","iframeClass","children","className","style","ref","useRef","___EmotionJSX","ImageLightboxHandler","parentRef","Button","_styled","LinkButton","buttonSizeStyles","small","fontSize","regular","variant","rest","derivedChildren","React","child","size","Figure","caption","centered","sizeToContent","maxWidth","type","captionChildren","Wrapper","Iframe","src","width","height","allowFullScreen","paddingBottom","mozallowfullscreen","webkitallowfullscreen","LazyLightbox","async","window","Promise","resolve","requestIdleCallback","timeout","setTimeout","requestLowPriority","activeImage","setActiveImage","useState","openLightbox","useCallback","aspectRatio","useEffect","attachedHandlers","parent","current","selector","from","querySelectorAll","filter","elem","HTMLImageElement","flatMap","imageElement","linkAncestor","closest","contains","getAttribute","targetElement","fullScaleUrl","href","url","path","URL","pathname","extension","substring","lastIndexOf","imageExtensions","has","e","isImageLikeUrl","forEach","_ref2","handler","preventDefault","stopPropagation","bounds","getBoundingClientRect","addEventListener","setAttribute","_ref3","element","event","removeEventListener","removeAttribute","Suspense","fallback","image","onClose","Set","scrollBarAuto","rightLink","rightMixin","rightActiveMixin","moveBreakpoint","IconWrapper","transition","important","up","svgDataUrl","svg","encodeURIComponent","activeClass","LinkIcon","linkIconRawSvg","AnchorWrapper","Anchor","createLinkableHeading","component","Component","right","HeadingComponent","id","hash","useContext","HashLocationContext","firstRender","useInitialRender","active","displayName","String","defineProperty","value","shortcodes","Icon","overrides","a","pre","CodeBlock","linkableHeadingShortcodes","h1","h2","h3","h4","h5","h6","Mdx","components","linkableHeadings","componentsMemo","useMemo","MDXProvider","_ref","_ref4","_ref5","ProjectTopics","main","secondary","map","mainTopic","Topic","secondaryTopic","ease","easeOutBack","TransitionSpeed","properties","speed","Normal","suffix","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider"],"sourceRoot":""}