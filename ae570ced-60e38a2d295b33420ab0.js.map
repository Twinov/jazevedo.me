{"version":3,"file":"ae570ced-60e38a2d295b33420ab0.js","mappings":"gRAcA,MAAMA,EAAS,CACbC,YAAU,cAAAC,OAAAA,YAAA,EAAAC,KAAAA,UAAAC,OAAAA,uEAMVC,eAAa,cAAAH,OAAAA,YAAA,4CAGKI,EAAAA,EAAAA,MAAS,4JAMvBC,EAAAA,EAAAA,IAAK,MAAK,sHAMVA,EAAAA,EAAAA,IAAK,MAAK,oGAQdC,iBAAe,cAAAN,OAAAA,YAAA,6FAMNI,EAAAA,EAAAA,KAAQ,KAEbC,EAAAA,EAAAA,IAAK,MAAK,QACHD,EAAAA,EAAAA,KAAQ,MAGfC,EAAAA,EAAAA,IAAK,MAAK,gBACKD,EAAAA,EAAAA,KAAQ,MAG3BG,YAAU,cAAAP,OAAAA,YAAA,qBACYQ,EAAAA,GAAmB,qDAKzCC,cAAcC,EAAAA,EAAAA,GAAOC,EAAAA,EAAM,CAAAX,OAAAA,YAAbU,CAAc,kBAGxBL,EAAAA,EAAAA,IAAK,MAAK,KACRO,EAAAA,EAAAA,IAAIC,EAAAA,EAAAA,MAAsB,aAAC,iCAU7BC,EAAAA,EAAAA,IAAG,MAAK,2CAKRT,EAAAA,EAAAA,IAAK,MAAK,2CAMdU,gBAAgBL,EAAAA,EAAAA,GAAOK,EAAAA,GAAc,CAAAf,OAAAA,YAArBU,CAAsB,CAAAT,KAAAA,SAAAC,OAAAA,oBA4DzB,SAASc,EAAW,GAEK,IAFL,KACjCC,GACgB,EAChB,MAAM,IAAEC,EAAG,aAAEC,EAAY,OAAEC,GAAWH,EAAKI,KAAKC,cAEhD,IAAI,QAAEC,GAAYN,EAAKO,KAAKC,aACxBF,EAAQG,SAAS,OACnBH,EAAUA,EAAQI,MAAM,GAAI,IAE9B,MAAMC,EAAkB,GAAGL,EAAUJ,EAErC,OACEU,EAAAA,EAAAA,IAACC,EAAAA,EAAM,CACLC,YAAU,EACVC,YAAa,CACXC,QAAS,UACTC,aAAa,EACbC,eACEN,EAAAA,EAAAA,IAAC/B,EAAOK,cAAa,MACnB0B,EAAAA,EAAAA,IAAC/B,EAAOiB,eAAc,KAAC,WACvBc,EAAAA,EAAAA,IAAC/B,EAAOQ,gBAAe,MAGrBuB,EAAAA,EAAAA,IAAC/B,EAAOW,aAAY,CAClB2B,KAAMlB,EACNmB,UAAQ,EACRC,KAAK,WACLC,UAAU,WACVC,UAAU,0BAEZX,EAAAA,EAAAA,IAAC/B,EAAOW,aAAY,CAClB2B,KAAMlB,EACNmB,UAAQ,EACRC,KAAK,WACLG,KAAK,WACLD,UAAU,0BAGZX,EAAAA,EAAAA,IAAC/B,EAAOW,aAAY,CAClB2B,KAAMhB,EACNkB,KAAK,SACLG,KAAK,iBAEPZ,EAAAA,EAAAA,IAAC/B,EAAOW,aAAY,CAGlB2B,KAAI,0CAA4CR,EAChDU,KAAK,WACLG,KAAK,0BAOfZ,EAAAA,EAAAA,IAAC/B,EAAOC,WAAU,MAChB8B,EAAAA,EAAAA,IAAC/B,EAAOS,WAAU,MAChBsB,EAAAA,EAAAA,IAAAA,QAAAA,CACEa,IAAKxB,EACLyB,KAAK,kBACLC,OAAO,OACPC,MAAM,OACNC,MAAO,CAAEC,OAAQ,YAM7B,CAMO,SAASC,EAAK,GAA+C,IAA/C,KAAE/B,GAAuB,EAC5C,MAAM,KAAEhB,EAAI,iBAAEgD,GAAqBhC,EAAKO,KAAKC,aAE7C,IAAIyB,EAAqB,GACzB,GAA2B,MAAvBjC,EAAKkC,eAAwB,CAU/BD,EAAqB,mBATI,IAAIE,KAAKnC,EAAKkC,eAAeE,cACNC,mBAC9C,QACA,CACEC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGqD,GAChE,CAEA,OACE5B,EAAAA,EAAAA,IAAC6B,EAAAA,EAAI,CACHC,MAAM,SACNC,YAAW,aAAe3D,EAAOiD,EAAkB,MAAMD,EAAgB,KAG/E,C","sources":["webpack://jazevedo.me/./src/pages/resume.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\nimport { graphql } from \"gatsby\";\nimport type { PageProps, HeadProps } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport { gap } from \"../theme/spacing\";\nimport { chromePdfBackground } from \"../theme/color\";\nimport Button, { buttonSizeStyles } from \"../components/Button\";\nimport Meta from \"../components/Meta\";\nimport { down, up } from \"../theme/media\";\nimport { BrandLinkTitle } from \"../components/Header\";\n\nconst Styled = {\n  PageLayout: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    height: 100%;\n  `,\n  HeaderContent: styled.nav`\n    flex-shrink: 1;\n    display: grid;\n    --column-gap: ${gap.milli};\n    grid-template-columns: auto var(--column-gap) auto 1fr;\n    grid-template-rows: minmax(35px, auto);\n    grid-template-areas: \"brand . buttons .\";\n    align-items: center;\n\n    ${down(\"md\")} {\n      grid-template-columns: auto 1fr auto;\n      grid-template-rows: minmax(35px, auto);\n      grid-template-areas: \"brand . buttons\";\n    }\n\n    ${down(\"sm\")} {\n      grid-template-columns: auto;\n      grid-template-rows: auto auto;\n      grid-template-areas:\n        \"brand\"\n        \"buttons\";\n    }\n  `,\n  HeaderButtonBar: styled.div`\n    grid-area: buttons;\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    flex-wrap: wrap;\n    gap: ${gap.nano};\n\n    ${down(\"md\")} {\n      gap: ${gap.pico};\n    }\n\n    ${down(\"sm\")} {\n      padding-top: ${gap.nano};\n    }\n  `,\n  PdfWrapper: styled.div`\n    background-color: ${chromePdfBackground};\n    overflow-y: hidden;\n    height: 100%;\n    position: relative;\n  `,\n  HeaderButton: styled(Button)`\n    flex-shrink: 0;\n\n    ${down(\"md\")} {\n      ${css(buttonSizeStyles.small)}\n\n      /* Make the button icons larger */\n      & svg {\n        transform: scale(1.4);\n      }\n    }\n\n    /* Hide the text download button\n    and show the icon download button on small screens. */\n    ${up(\"md\")} {\n      &.download-icon-button {\n        display: none;\n      }\n    }\n    ${down(\"md\")} {\n      &.download-text-button {\n        display: none;\n      }\n    }\n  `,\n  BrandLinkTitle: styled(BrandLinkTitle)`\n    /* Vertically nudge the brand title down a bit, to visually align it with\n    the text in the buttons */\n    margin-top: 3px;\n  `,\n};\n\n// Must stay synchronized with below pageQuery\ntype PageQueryResult = {\n  file: {\n    childDataYaml: {\n      pdf: string;\n      hostedSource: string;\n      github: string;\n    };\n  };\n\n  site: {\n    siteMetadata: {\n      siteUrl: string;\n      name: string;\n      briefDescription: string;\n    };\n  };\n\n  resumeMetadata?: {\n    lastModified: string;\n  };\n};\n\nexport const pageQuery = graphql`\n  query {\n    file(\n      name: { eq: \"resume\" }\n      extension: { eq: \"yaml\" }\n      sourceInstanceName: { eq: \"data\" }\n    ) {\n      childDataYaml {\n        pdf\n        hostedSource\n        github\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        name\n        briefDescription\n      }\n    }\n\n    resumeMetadata {\n      lastModified\n    }\n  }\n`;\n\nexport type ResumePageProps = PageProps<PageQueryResult>;\n\nexport default function ResumePage({\n  data,\n}: ResumePageProps): React.ReactElement {\n  const { pdf, hostedSource, github } = data.file.childDataYaml;\n\n  let { siteUrl } = data.site.siteMetadata;\n  if (siteUrl.endsWith(\"/\")) {\n    siteUrl = siteUrl.slice(0, -1);\n  }\n  const hostedSourceUrl = `${siteUrl}${hostedSource}`;\n\n  return (\n    <Layout\n      hideFooter\n      headerProps={{\n        spacing: \"compact\",\n        noContainer: true,\n        customContent: (\n          <Styled.HeaderContent>\n            <Styled.BrandLinkTitle>Resume</Styled.BrandLinkTitle>\n            <Styled.HeaderButtonBar>\n              {/* One of the following buttons will be hidden,\n            depending on the screen size: */}\n              <Styled.HeaderButton\n                href={pdf}\n                download\n                icon=\"download\"\n                ariaLabel=\"Download\"\n                className=\"download-icon-button\"\n              />\n              <Styled.HeaderButton\n                href={pdf}\n                download\n                icon=\"download\"\n                text=\"Download\"\n                className=\"download-text-button\"\n              />\n\n              <Styled.HeaderButton\n                href={github}\n                icon=\"github\"\n                text=\"View source\"\n              />\n              <Styled.HeaderButton\n                // Construct the Overleaf URL from the hosted source URL.\n                // See https://www.overleaf.com/devs\n                href={`https://www.overleaf.com/docs?snip_uri=${hostedSourceUrl}`}\n                icon=\"overleaf\"\n                text=\"Edit on Overleaf\"\n              />\n            </Styled.HeaderButtonBar>\n          </Styled.HeaderContent>\n        ),\n      }}\n    >\n      <Styled.PageLayout>\n        <Styled.PdfWrapper>\n          <embed\n            src={pdf}\n            type=\"application/pdf\"\n            height=\"100%\"\n            width=\"100%\"\n            style={{ border: \"none\" }}\n          />\n        </Styled.PdfWrapper>\n      </Styled.PageLayout>\n    </Layout>\n  );\n}\n\nexport type ResumeHeadProps = HeadProps<PageQueryResult>;\n\n// Gatsby Head component:\n// https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\nexport function Head({ data }: ResumeHeadProps): React.ReactElement {\n  const { name, briefDescription } = data.site.siteMetadata;\n\n  let lastModifiedString = \"\";\n  if (data.resumeMetadata != null) {\n    const lastModifiedDate = new Date(data.resumeMetadata.lastModified);\n    const lastModifiedDateString = lastModifiedDate.toLocaleDateString(\n      \"en-US\",\n      {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }\n    );\n    lastModifiedString = ` (last modified ${lastModifiedDateString})`;\n  }\n\n  return (\n    <Meta\n      title=\"Resume\"\n      description={`Resume of ${name}${lastModifiedString} | ${briefDescription}}`}\n    />\n  );\n}\n"],"names":["Styled","PageLayout","target","name","styles","HeaderContent","gap","down","HeaderButtonBar","PdfWrapper","chromePdfBackground","HeaderButton","_styled","Button","css","buttonSizeStyles","up","BrandLinkTitle","ResumePage","data","pdf","hostedSource","github","file","childDataYaml","siteUrl","site","siteMetadata","endsWith","slice","hostedSourceUrl","___EmotionJSX","Layout","hideFooter","headerProps","spacing","noContainer","customContent","href","download","icon","ariaLabel","className","text","src","type","height","width","style","border","Head","briefDescription","lastModifiedString","resumeMetadata","Date","lastModified","toLocaleDateString","year","month","day","Meta","title","description"],"sourceRoot":""}