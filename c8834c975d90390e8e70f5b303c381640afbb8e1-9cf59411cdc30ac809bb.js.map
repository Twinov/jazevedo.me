{"version":3,"file":"c8834c975d90390e8e70f5b303c381640afbb8e1-9cf59411cdc30ac809bb.js","mappings":"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","sources":["webpack://jazevedo.me/./src/components/LinkButton/index.ts","webpack://jazevedo.me/./src/components/ProjectCard/ProjectCard.tsx","webpack://jazevedo.me/./src/components/ProjectCard/index.ts","webpack://jazevedo.me/./src/components/Topic.tsx","webpack://jazevedo.me/./src/components/ProjectTopics.tsx"],"sourcesContent":["import LinkButton from \"./LinkButton\";\n\nexport default LinkButton;\n","import React, { MouseEvent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { ProjectCardFragment } from \"./types\";\nimport { shadow } from \"../../theme/shadows\";\nimport { gap } from \"../../theme/spacing\";\nimport { color, ColorMode, mode } from \"../../theme/color\";\nimport LinkButton from \"../LinkButton\";\nimport ProjectTopics from \"../ProjectTopics\";\n\nconst Styled = {\n  ProjectCard: styled(LinkButton)`\n    display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: 200px auto;\n    min-width: 320px;\n\n    overflow: hidden;\n    border: none;\n    background: none;\n    padding: 0;\n    cursor: pointer;\n    text-decoration: none;\n    text-align: left;\n    border-radius: 12px;\n    box-shadow: ${shadow(\"z4\")};\n    transition: 0.15s box-shadow linear, 0.1s transform linear;\n    transform: none;\n    will-change: transform;\n    color: ${color(\"text\")};\n\n    --card-bg: ${color(\"bg+10\")};\n    --card-highlight-bg: transparent;\n\n    &:hover {\n      box-shadow: ${shadow(\"z5\")};\n      transform: translateY(-4px);\n      --card-highlight-bg: ${color(\"bg+15\")};\n    }\n  `,\n  CardTop: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-end;\n    height: 100%;\n  `,\n  CardBottom: styled.div`\n    padding: ${gap.nano};\n    background-color: var(--card-bg);\n    position: relative;\n\n    /* Use an absolutely positioned pseudo-element\n    that animates between transparent and opaque\n    to simulate the <CardBottom> having a background color transition\n    without creating an ugly transition upon changing themes */\n    &::before {\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: 100%;\n      content: \" \";\n      transition: 0.1s background-color linear;\n      background-color: var(--card-highlight-bg);\n      z-index: -1;\n    }\n  `,\n  CardTitle: styled.h4`\n    font-size: 1.3rem;\n    font-weight: 700;\n    margin-bottom: ${gap.nano};\n  `,\n  CardDescription: styled.p`\n    font-size: 0.95rem;\n    font-weight: 400;\n    margin-bottom: ${gap.nano};\n  `,\n  Logo: styled.img`\n    max-width: 200px;\n    max-height: 100px;\n\n    margin-bottom: ${gap.nano};\n    margin-left: ${gap.nano};\n\n    user-select: none;\n    user-drag: none;\n\n    /* Add drop shadow */\n    filter: drop-shadow(0 0 18px rgba(0, 0, 0, 1))\n      drop-shadow(0 0 18px rgba(0, 0, 0, 0.8));\n  `,\n  ColorOverlay: styled.div`\n    ${mode(ColorMode.Dark)} {\n      background-color: rgba(20, 20, 20, 0.2);\n    }\n\n    ${mode(ColorMode.Light)} {\n      background-color: rgba(230, 230, 230, 0.2);\n    }\n  `,\n};\n\nexport type ProjectCardProps = {\n  project: ProjectCardFragment;\n  onClick?: () => boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Displays a small card with image, logo/title, and description\n * to provide a clickable preview of an individual project.\n */\nexport default function ProjectCard({\n  project,\n  onClick,\n  className,\n  style,\n}: ProjectCardProps): React.ReactElement {\n  const { card, logo } = project;\n  const slug = project.parent.relativeDirectory;\n  const {\n    title,\n    description,\n    topics: { main: mainTopics },\n  } = project.frontmatter;\n  const url = `/projects/${slug}`;\n\n  return (\n    <Styled.ProjectCard\n      draggable={false}\n      href={url}\n      className={className}\n      style={style}\n      onClick={(e: MouseEvent): void => {\n        if (onClick != null && !onClick()) {\n          e.preventDefault();\n        }\n      }}\n    >\n      <Styled.CardTop\n        style={{\n          gridArea: \"1/1\",\n          zIndex: 2,\n        }}\n      >\n        <Styled.Logo\n          src={logo?.publicURL ?? \"\"}\n          alt={`${title ?? \"unknown\"} logo`}\n          draggable={false}\n        />\n      </Styled.CardTop>\n      <Styled.CardBottom\n        style={{\n          gridArea: \"2/1\",\n          zIndex: 2,\n        }}\n      >\n        <Styled.CardTitle>{title}</Styled.CardTitle>\n        <Styled.CardDescription>{description}</Styled.CardDescription>\n        {/* This is not a typo;\n        I like the way the hollow pills look more on the cards,\n        so this passes the main topics to the `secondary` prop */}\n        <ProjectTopics secondary={mainTopics ?? []} />\n      </Styled.CardBottom>\n      {card?.childImageSharp?.gatsbyImageData != null ? (\n        <GatsbyImage\n          style={{ gridArea: \"1/1/2/1\", zIndex: 0, height: \"100%\" }}\n          image={card.childImageSharp.gatsbyImageData}\n          alt=\"\"\n        />\n      ) : (\n        <img alt=\"\" src={card?.publicURL ?? \"\"} />\n      )}\n      <Styled.ColorOverlay\n        style={{ gridArea: \"1/1/2/1\", zIndex: 1, height: \"100%\" }}\n      />\n    </Styled.ProjectCard>\n  );\n}\n","import ProjectCard from \"./ProjectCard\";\n\nexport default ProjectCard;\n","import styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\n\nimport { color, ColorMode, hybridColor, mode } from \"../theme/color\";\n\n/**\n * Styled `<span>` component that looks like a pill\n */\nconst Topic = styled.span<{ variant?: \"filled\" | \"hollow\" }>`\n  border-radius: 1000px;\n  padding: 1px 8px;\n  border: 2px solid ${color(\"primary\")};\n  display: inline-block;\n  font-weight: 700;\n  font-size: 0.8rem;\n  color: ${({ variant }): string =>\n    variant === \"filled\" ? color(\"light\") : color(\"text-strong\")};\n\n  ${mode(ColorMode.Light)} {\n    background-color: ${({ variant }): string =>\n      variant === \"filled\"\n        ? hybridColor(\"primary\", ColorMode.Light)\n        : rgba(hybridColor(\"primary\", ColorMode.Light), 0.2)};\n    text-shadow: ${({ variant }): string =>\n      variant === \"filled\" ? \"0 0 4px rgba(0, 0, 0, 0.3)\" : \"none\"};\n  }\n\n  ${mode(ColorMode.Dark)} {\n    background-color: ${({ variant }): string =>\n      variant === \"filled\"\n        ? hybridColor(\"primary\", ColorMode.Dark)\n        : rgba(hybridColor(\"primary\", ColorMode.Dark), 0.4)};\n    text-shadow: ${({ variant }): string =>\n      variant === \"filled\" ? \"0 0 4px rgba(0, 0, 0, 0.7)\" : \"none\"};\n  }\n`;\n\nexport default Topic;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Topic from \"./Topic\";\nimport { gap } from \"../theme/spacing\";\n\nconst Styled = {\n  ProjectTopics: styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: ${gap.femto};\n  `,\n};\n\nexport type ProjectTopicsProps = {\n  main?: string[];\n  secondary?: string[];\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * List of topics, split into \"main\" and \"secondary\",\n * each represented with a pill in a horizontal, wrapping flexbox.\n */\nexport default function ProjectTopics({\n  main = [],\n  secondary = [],\n  className,\n  style,\n}: ProjectTopicsProps): React.ReactElement {\n  return (\n    <Styled.ProjectTopics className={className} style={style}>\n      {main.map((mainTopic) => (\n        <Topic variant=\"filled\" key={mainTopic}>\n          {mainTopic}\n        </Topic>\n      ))}\n      {secondary.map((secondaryTopic) => (\n        <Topic variant=\"hollow\" key={secondaryTopic}>\n          {secondaryTopic}\n        </Topic>\n      ))}\n    </Styled.ProjectTopics>\n  );\n}\n"],"names":["LinkButton","Styled","ProjectCard","shadow","color","CardTop","CardBottom","gap","CardTitle","CardDescription","Logo","ColorOverlay","mode","ColorMode","project","onClick","className","style","card","logo","slug","parent","relativeDirectory","frontmatter","title","description","mainTopics","topics","main","url","draggable","href","e","preventDefault","gridArea","zIndex","src","publicURL","alt","ProjectTopics","secondary","childImageSharp","gatsbyImageData","G","height","image","variant","hybridColor","rgba","map","mainTopic","key","secondaryTopic"],"sourceRoot":""}