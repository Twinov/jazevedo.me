{"version":3,"file":"8aff09ad-d587d59e7376b8290162.js","mappings":"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","sources":["webpack://jazevedo.me/./src/components/Header.tsx"],"sourcesContent":["import React, { useCallback, useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport { darken, lighten } from \"polished\";\n\nimport type { ButtonFragment } from \"./LinkButton/schema\";\nimport LinkButton from \"./LinkButton/LinkButton\";\nimport {\n  color,\n  ColorMode,\n  ColorModeContext,\n  hybridColor,\n  mode,\n} from \"../theme/color\";\nimport BrandSvg from \"../images/brand.inline.svg\";\nimport { useInitialRender } from \"../hooks\";\nimport { container } from \"../theme/layout\";\nimport { gap } from \"../theme/spacing\";\nimport Switch from \"./Switch\";\nimport Icon from \"./Icon\";\nimport { down } from \"../theme/media\";\n\nconst linkCommonStyle = `\n  text-decoration: none;\n  color: ${color(\"text-strong\")};\n  white-space: nowrap;\n\n  &:hover,\n  &:active {\n    ${mode(ColorMode.Dark)} {\n      color: ${lighten(0.3, hybridColor(\"primary\", ColorMode.Dark))};\n    }\n\n    ${mode(ColorMode.Light)} {\n      color: ${darken(0.1, hybridColor(\"primary\", ColorMode.Light))};\n    }\n  }\n`;\n\nconst Styled = {\n  HeaderOuter: styled.div`\n    &:not([data-no-container=\"true\"]) {\n      ${container}\n    }\n    &[data-no-container=\"true\"] {\n      padding-left: var(--site-padding);\n      padding-right: var(--site-padding);\n    }\n\n    &[data-spacing=\"sparse\"] {\n      padding-top: ${gap.milli};\n      padding-bottom: ${gap.milli};\n    }\n\n    &[data-spacing=\"compact\"] {\n      padding-top: ${gap.nano};\n      padding-bottom: ${gap.nano};\n    }\n  `,\n  Header: styled.nav`\n    flex-shrink: 1;\n\n    display: grid;\n    --column-gap: ${gap.kilo};\n    grid-template-columns: auto var(--column-gap) auto var(--column-gap) auto 1fr;\n    grid-template-rows: minmax(35px, auto);\n    grid-template-areas: \"brand . links . switch .\";\n    align-items: center;\n\n    ${down(\"lg\")} {\n      --column-gap: ${gap.centi};\n    }\n\n    ${down(\"md\")} {\n      grid-template-columns: auto 1fr auto;\n      grid-template-rows: minmax(35px, auto) auto;\n      grid-template-areas:\n        \"brand . switch\"\n        \"links links links\";\n      --column-gap: 0;\n    }\n  `,\n  LinksOuter: styled.div`\n    grid-area: links;\n  `,\n  Links: styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: ${gap.nano};\n\n    ${down(\"lg\")} {\n      gap: ${gap.femto};\n    }\n\n    --link-x-padding: ${gap.pico};\n    --link-y-padding: ${gap.femto};\n    padding-top: var(--link-y-padding);\n\n    ${down(\"md\")} {\n      --link-y-padding: ${gap.femto};\n\n      flex-wrap: wrap;\n\n      /* Visually correct for left padding */\n      margin-left: calc(-1 * var(--link-x-padding));\n    }\n  `,\n  HeaderPageLink: styled(LinkButton)`\n    ${linkCommonStyle}\n\n    padding: var(--link-y-padding) var(--link-x-padding);\n\n    &.active-link {\n      border-bottom: 2px solid ${color(\"text-strong\")};\n    }\n\n    /* When forced-colors are enabled, restore the default link\n    underline-on-hover behavior */\n    @media (forced-colors: active) {\n      text-decoration: initial;\n\n      &:hover,\n      &:active {\n        text-decoration: underline;\n      }\n    }\n  `,\n  BrandLink: styled(Link)`\n    ${linkCommonStyle}\n\n    transform: translateY(3px);\n    grid-area: brand;\n    align-self: stretch;\n    --brand-x-padding: ${gap.nano};\n    padding: 0 var(--brand-x-padding);\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    /* Visually correct for left padding */\n    margin-left: calc(-1 * var(--brand-x-padding));\n\n    /* When forced-colors are enabled, manually add a bottom-border\n    to the brand link on hover to make it more visible */\n    @media (forced-colors: active) {\n      &:hover,\n      &:active {\n        --brand-forced-color-border-width: 3px;\n\n        border-bottom: var(--brand-forced-color-border-width) solid white;\n        /* Compensate for the border width to avoid a visual shift */\n        padding-top: var(--brand-forced-color-border-width);\n      }\n    }\n  `,\n  ThemeSwitcherWrapper: styled.div`\n    grid-area: switch;\n  `,\n  Switch: styled(Switch)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      transform: translateY(-1px);\n    }\n  `,\n  UncheckedIcon: styled(Icon)`\n    color: ${color(\"light\")};\n  `,\n  CheckedIcon: styled(Icon)`\n    color: ${color(\"light\")};\n  `,\n  BrandLinkTitle: styled.div`\n    --brand-link-title-spacing: ${gap.nano};\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    position: relative;\n\n    & > h1 {\n      font-size: 1.3rem;\n      font-weight: 400;\n\n      /* Vertically align with brand */\n      margin-top: -3px;\n    }\n  `,\n  TitleSeparator: styled.div`\n    /* Don't use gap on the flex parent, and instead manually set\n    margin/padding for each element. This allows the tap target for the brand\n    link to be maximal. */\n    margin-right: calc(var(--brand-link-title-spacing) - 2px);\n    align-self: stretch;\n\n    width: 2px;\n\n    /* Vertically nudge slightly */\n    top: -2px;\n    bottom: 0;\n    position: relative;\n    background-color: ${color(\"text-faint\")};\n  `,\n};\n\n// Must stay synchronized with below staticQuery\ntype StaticQueryResult = {\n  file: {\n    childDataYaml: {\n      brandText: string;\n      links: ButtonFragment[];\n    };\n  };\n};\n\nfunction useData(): StaticQueryResult {\n  return useStaticQuery<StaticQueryResult>(\n    graphql`\n      query {\n        file(\n          name: { eq: \"header\" }\n          extension: { eq: \"yaml\" }\n          sourceInstanceName: { eq: \"data\" }\n        ) {\n          childDataYaml {\n            brandText\n            links {\n              ...Buttons\n            }\n          }\n        }\n      }\n    `\n  );\n}\n\nexport type HeaderProps = {\n  spacing?: \"compact\" | \"sparse\";\n  customContent?: React.ReactNode;\n  noContainer?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Top-level site navigation component,\n * with hard-coded links to other pages\n * and data-provided social links.\n */\nexport default function Header({\n  spacing = \"compact\",\n  customContent,\n  noContainer = false,\n  className,\n  style,\n}: HeaderProps): React.ReactElement {\n  const { links: socialLinks } = useData().file.childDataYaml;\n  const links: ButtonFragment[] = [\n    { href: \"/resume\", text: \"Resume\" },\n    { href: \"/projects\", text: \"Projects\" },\n    ...socialLinks,\n  ];\n\n  return (\n    <Styled.HeaderOuter\n      className={className}\n      style={style}\n      data-spacing={spacing}\n      data-no-container={noContainer}\n    >\n      {customContent != null ? (\n        customContent\n      ) : (\n        <Styled.Header>\n          <BrandLink />\n          <Styled.LinksOuter>\n            <Styled.Links>\n              {links.map((link, i) => (\n                <Styled.HeaderPageLink\n                  key={i}\n                  // eslint-disable-next-line react/jsx-props-no-spreading\n                  {...link}\n                  iconClassName=\"header-link-icon\"\n                  activeLinkClassName=\"active-link\"\n                />\n              ))}\n            </Styled.Links>\n          </Styled.LinksOuter>\n          <Styled.ThemeSwitcherWrapper>\n            <ThemeSwitcher />\n          </Styled.ThemeSwitcherWrapper>\n        </Styled.Header>\n      )}\n    </Styled.HeaderOuter>\n  );\n}\n\n// ? -----------------\n// ? Helper Components\n// ? -----------------\n\nfunction ThemeSwitcher(): React.ReactElement | null {\n  const { mode: currentMode, setMode } = useContext(ColorModeContext);\n  const toggleWrapper = useCallback(\n    (checked: boolean) => {\n      const targetMode = checked ? ColorMode.Dark : ColorMode.Light;\n      setMode(targetMode);\n    },\n    [setMode]\n  );\n\n  // Skip rendering when server-rendering,\n  // but include a div that takes up the same space\n  // to prevent layout shift.\n  const initialRender = useInitialRender();\n  if (initialRender) {\n    return <div style={{ width: 56, height: 28 }} />;\n  }\n\n  return (\n    <Styled.Switch\n      onChange={toggleWrapper}\n      checked={currentMode === ColorMode.Dark}\n      aria-label=\"Dark mode switch\"\n      uncheckedIcon={<Styled.UncheckedIcon name=\"sun\" />}\n      checkedIcon={<Styled.CheckedIcon name=\"moon\" />}\n      height={28}\n      width={56}\n    />\n  );\n}\n\nexport type BrandLinkProps = {\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nexport function BrandLink({\n  className,\n  style,\n}: BrandLinkProps): React.ReactElement {\n  const { brandText } = useData().file.childDataYaml;\n  return (\n    <Styled.BrandLink\n      to=\"/\"\n      aria-label={brandText}\n      className={className}\n      style={style}\n    >\n      {/* Brand text is written in Dubai font, Bold:\n        https://dubaifont.com/\n        https://www.fontsquirrel.com/fonts/dubai */}\n      <BrandSvg style={{ height: 22 }} />\n    </Styled.BrandLink>\n  );\n}\n\nexport type BrandLinkTitleProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n};\n\nconst StyledBrandLinkTitleLink = styled(BrandLink)`\n  /* Remove excessive right padding */\n  padding-right: var(--brand-link-title-spacing);\n\n  /* Remove vertical nudging */\n  transform: none;\n`;\n\n/**\n * Draws the brand link next to a title, separated by a vertical bar.\n */\nexport function BrandLinkTitle({\n  children,\n  className,\n  style,\n}: BrandLinkTitleProps): React.ReactElement {\n  return (\n    <Styled.BrandLinkTitle className={className} style={style}>\n      <StyledBrandLinkTitleLink />\n      <Styled.TitleSeparator />\n      <h1>{children}</h1>\n    </Styled.BrandLinkTitle>\n  );\n}\n"],"names":["linkCommonStyle","color","mode","ColorMode","lighten","hybridColor","darken","Styled","HeaderOuter","container","gap","Header","down","LinksOuter","Links","HeaderPageLink","_styled","LinkButton","BrandLink","Link","ThemeSwitcherWrapper","Switch","UncheckedIcon","Icon","CheckedIcon","BrandLinkTitle","TitleSeparator","useData","useStaticQuery","spacing","customContent","noContainer","className","style","links","socialLinks","file","childDataYaml","href","text","___EmotionJSX","map","link","i","key","iconClassName","activeLinkClassName","ThemeSwitcher","currentMode","setMode","useContext","ColorModeContext","toggleWrapper","useCallback","checked","targetMode","useInitialRender","width","height","onChange","uncheckedIcon","name","checkedIcon","brandText","to","BrandSvg","StyledBrandLinkTitleLink","children"],"sourceRoot":""}