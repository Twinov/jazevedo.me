{"version":3,"file":"abb1e4005e4b4a5991daf1586a13c67e072dd998-73994399a87f5039da0a.js","mappings":"gOAWA,MAAMA,EAAS,CACbC,aAAaC,EAAAA,EAAAA,GAAOC,EAAAA,EAAU,oBAAjBD,CAAkB,kOAcfE,EAAAA,EAAAA,GAAO,MAAK,yGAIjBC,EAAAA,EAAAA,IAAM,QAAO,eAETA,EAAAA,EAAAA,IAAM,SAAQ,8EAQTD,EAAAA,EAAAA,GAAO,MAAK,oDAEHC,EAAAA,EAAAA,IAAM,SAAQ,sKAoB3CC,SAAO,4JAOPC,YAAU,6CACGC,EAAAA,EAAAA,KAAQ,iOAoBrBC,WAAS,mFAGUD,EAAAA,EAAAA,KAAQ,KAE3BE,iBAAe,mFAGIF,EAAAA,EAAAA,KAAQ,KAE3BG,MAAI,oFAIeH,EAAAA,EAAAA,KAAQ,gBACVA,EAAAA,EAAAA,KAAQ,4HASzBI,cAAY,mCACRC,EAAAA,EAAAA,IAAKC,EAAAA,GAAAA,MAAe,6CAIpBD,EAAAA,EAAAA,IAAKC,EAAAA,GAAAA,OAAgB,iDCrH3B,MDsIe,SAAqB,GAKM,IAAD,UALL,QAClCC,EAAO,QACPC,EAAO,UACPC,EAAS,MACTC,GACiB,EACjB,MAAM,KAAEC,EAAI,KAAEC,GAASL,EACjBM,EAAON,EAAQO,OAAOC,mBACtB,MACJC,EAAK,YACLC,EACAC,QAAUC,KAAMC,IACdb,EAAQc,YACNC,EAAG,aAAgBT,EAEzB,OACEU,EAAAA,EAAAA,IAAC/B,EAAOC,YAAW,CACjB+B,WAAW,EACXC,KAAMH,EACNb,UAAWA,EACXC,MAAOA,EACPF,QAAUkB,IACO,MAAXlB,GAAoBA,KACtBkB,EAAEC,gBACJ,IAGFJ,EAAAA,EAAAA,IAAC/B,EAAOM,QAAO,CACbY,MAAO,CACLkB,SAAU,MACVC,OAAQ,KAGVN,EAAAA,EAAAA,IAAC/B,EAAOW,KAAI,CACV2B,IAAoB,QAAjB,EAAElB,aAAI,EAAJA,EAAMmB,iBAAS,QAAI,GACxBC,KAAQhB,QAAAA,EAAS,WAAS,QAC1BQ,WAAW,MAGfD,EAAAA,EAAAA,IAAC/B,EAAOO,WAAU,CAChBW,MAAO,CACLkB,SAAU,MACVC,OAAQ,KAGVN,EAAAA,EAAAA,IAAC/B,EAAOS,UAAS,KAAEe,IACnBO,EAAAA,EAAAA,IAAC/B,EAAOU,gBAAe,KAAEe,IAIzBM,EAAAA,EAAAA,IAACU,EAAAA,EAAa,CAACC,UAAWd,QAAAA,EAAc,MAEC,OAA1CT,SAAqB,QAAjB,EAAJA,EAAMwB,uBAAe,WAAjB,EAAJC,EAAuBC,kBACtBd,EAAAA,EAAAA,IAACe,EAAAA,EAAW,CACV5B,MAAO,CAAEkB,SAAU,UAAWC,OAAQ,EAAGU,OAAQ,QACjDC,MAAO7B,EAAKwB,gBAAgBE,gBAC5BL,IAAI,MAGNT,EAAAA,EAAAA,IAAAA,MAAAA,CAAKS,IAAI,GAAGF,IAAoB,QAAjB,EAAEnB,aAAI,EAAJA,EAAMoB,iBAAS,QAAI,MAEtCR,EAAAA,EAAAA,IAAC/B,EAAOY,aAAY,CAClBM,MAAO,CAAEkB,SAAU,UAAWC,OAAQ,EAAGU,OAAQ,UAIzD,C","sources":["webpack://jazevedo.me/./src/components/ProjectCard/ProjectCard.tsx","webpack://jazevedo.me/./src/components/ProjectCard/index.ts"],"sourcesContent":["import React, { MouseEvent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { ProjectCardFragment } from \"./types\";\nimport { shadow } from \"../../theme/shadows\";\nimport { gap } from \"../../theme/spacing\";\nimport { color, ColorMode, mode } from \"../../theme/color\";\nimport LinkButton from \"../LinkButton\";\nimport ProjectTopics from \"../ProjectTopics\";\n\nconst Styled = {\n  ProjectCard: styled(LinkButton)`\n    display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: 200px auto;\n    min-width: 320px;\n\n    overflow: hidden;\n    border: none;\n    background: none;\n    padding: 0;\n    cursor: pointer;\n    text-decoration: none;\n    text-align: left;\n    border-radius: 12px;\n    box-shadow: ${shadow(\"z4\")};\n    transition: 0.15s box-shadow linear, 0.1s transform linear;\n    transform: none;\n    will-change: transform;\n    color: ${color(\"text\")};\n\n    --card-bg: ${color(\"bg+10\")};\n    --card-highlight-bg: transparent;\n\n    /* Only enable hover styles on devices with hover support.\n    Otherwise, it runs the risk of disrupting smooth horizontal scrolling\n    inside <ProjectCarousel>s on devices like iOS */\n    @media (hover: hover) {\n      &:hover {\n        box-shadow: ${shadow(\"z5\")};\n        transform: translateY(-4px);\n        --card-highlight-bg: ${color(\"bg+15\")};\n      }\n    }\n\n    /* When forced-colors are enabled, add a border to improve the contrast\n    of the hit target (the color is ignored) */\n    @media (forced-colors: active) {\n      border: 2px solid white;\n    }\n\n    /* When prefers-reduced-motion is enabled, disable the transition/transform */\n    @media (prefers-reduced-motion: reduce) {\n      transition: none;\n\n      /* HACK: increase specificity to override the &:hover style */\n      &:not(#__increase_specificity) {\n        transform: none;\n      }\n    }\n  `,\n  CardTop: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-end;\n    height: 100%;\n  `,\n  CardBottom: styled.div`\n    padding: ${gap.nano};\n    background-color: var(--card-bg);\n    position: relative;\n\n    /* Use an absolutely positioned pseudo-element\n    that animates between transparent and opaque\n    to simulate the <CardBottom> having a background color transition\n    without creating an ugly transition upon changing themes */\n    &::before {\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: 100%;\n      content: \" \";\n      transition: 0.1s background-color linear;\n      background-color: var(--card-highlight-bg);\n      z-index: -1;\n    }\n  `,\n  CardTitle: styled.h4`\n    font-size: 1.3rem;\n    font-weight: 700;\n    margin-bottom: ${gap.nano};\n  `,\n  CardDescription: styled.p`\n    font-size: 0.95rem;\n    font-weight: 400;\n    margin-bottom: ${gap.nano};\n  `,\n  Logo: styled.img`\n    max-width: 200px;\n    max-height: 100px;\n\n    margin-bottom: ${gap.nano};\n    margin-left: ${gap.nano};\n\n    user-select: none;\n    user-drag: none;\n\n    /* Add drop shadow */\n    filter: drop-shadow(0 0 18px rgba(0, 0, 0, 1))\n      drop-shadow(0 0 18px rgba(0, 0, 0, 0.8));\n  `,\n  ColorOverlay: styled.div`\n    ${mode(ColorMode.Dark)} {\n      background-color: rgba(20, 20, 20, 0.2);\n    }\n\n    ${mode(ColorMode.Light)} {\n      background-color: rgba(230, 230, 230, 0.2);\n    }\n  `,\n};\n\nexport type ProjectCardProps = {\n  project: ProjectCardFragment;\n  onClick?: () => boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Displays a small card with image, logo/title, and description\n * to provide a clickable preview of an individual project.\n */\nexport default function ProjectCard({\n  project,\n  onClick,\n  className,\n  style,\n}: ProjectCardProps): React.ReactElement {\n  const { card, logo } = project;\n  const slug = project.parent.relativeDirectory;\n  const {\n    title,\n    description,\n    topics: { main: mainTopics },\n  } = project.frontmatter;\n  const url = `/projects/${slug}`;\n\n  return (\n    <Styled.ProjectCard\n      draggable={false}\n      href={url}\n      className={className}\n      style={style}\n      onClick={(e: MouseEvent): void => {\n        if (onClick != null && !onClick()) {\n          e.preventDefault();\n        }\n      }}\n    >\n      <Styled.CardTop\n        style={{\n          gridArea: \"1/1\",\n          zIndex: 2,\n        }}\n      >\n        <Styled.Logo\n          src={logo?.publicURL ?? \"\"}\n          alt={`${title ?? \"unknown\"} logo`}\n          draggable={false}\n        />\n      </Styled.CardTop>\n      <Styled.CardBottom\n        style={{\n          gridArea: \"2/1\",\n          zIndex: 2,\n        }}\n      >\n        <Styled.CardTitle>{title}</Styled.CardTitle>\n        <Styled.CardDescription>{description}</Styled.CardDescription>\n        {/* This is not a typo;\n        I like the way the hollow pills look more on the cards,\n        so this passes the main topics to the `secondary` prop */}\n        <ProjectTopics secondary={mainTopics ?? []} />\n      </Styled.CardBottom>\n      {card?.childImageSharp?.gatsbyImageData != null ? (\n        <GatsbyImage\n          style={{ gridArea: \"1/1/2/1\", zIndex: 0, height: \"100%\" }}\n          image={card.childImageSharp.gatsbyImageData}\n          alt=\"\"\n        />\n      ) : (\n        <img alt=\"\" src={card?.publicURL ?? \"\"} />\n      )}\n      <Styled.ColorOverlay\n        style={{ gridArea: \"1/1/2/1\", zIndex: 1, height: \"100%\" }}\n      />\n    </Styled.ProjectCard>\n  );\n}\n","import ProjectCard from \"./ProjectCard\";\n\nexport default ProjectCard;\n"],"names":["Styled","ProjectCard","_styled","LinkButton","shadow","color","CardTop","CardBottom","gap","CardTitle","CardDescription","Logo","ColorOverlay","mode","ColorMode","project","onClick","className","style","card","logo","slug","parent","relativeDirectory","title","description","topics","main","mainTopics","frontmatter","url","___EmotionJSX","draggable","href","e","preventDefault","gridArea","zIndex","src","publicURL","alt","ProjectTopics","secondary","childImageSharp","_card$childImageSharp","gatsbyImageData","GatsbyImage","height","image"],"sourceRoot":""}