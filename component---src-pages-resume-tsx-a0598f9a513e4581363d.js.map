{"version":3,"file":"component---src-pages-resume-tsx-a0598f9a513e4581363d.js","mappings":"kSAUMA,EAAS,CACbC,QAAQ,OAAOC,EAAAA,EAAP,sBAAF,sLAcUC,EAAAA,EAAAA,GAAO,MAdjB,mFAmBkBC,EAAAA,EAAAA,IAAM,WAnBxB,WAoBOA,EAAAA,EAAAA,IAAM,SApBb,4BAuBkBA,EAAAA,EAAAA,IAAM,cAvBxB,8BA2BkBA,EAAAA,EAAAA,IAAM,cA3BxB,yCAgCkBC,EAAAA,EAAAA,KAAKD,EAAAA,EAAAA,IAAM,SAAU,IAhCvC,WAiCOA,EAAAA,EAAAA,IAAM,eAjCb,8CAqCkBC,EAAAA,EAAAA,KAAKD,EAAAA,EAAAA,IAAM,SAAU,IArCvC,8BAyCkBC,EAAAA,EAAAA,KAAKD,EAAAA,EAAAA,IAAM,SAAU,IAzCvC,sVAmD+BA,EAAAA,EAAAA,IAAM,WAnDrC,wBAsDYD,EAAAA,EAAAA,GAAO,MAtDnB,0BA0DYA,EAAAA,EAAAA,GAAO,MA1DnB,oNAiGO,SAASF,EAAT,GAKsB,IAJnCK,EAIkC,EAJlCA,QACAC,EAGkC,EAHlCA,UACAC,EAEkC,EAFlCA,SACGC,GAC+B,YAG5BC,EAAkBC,EAAAA,SAAAA,IACtBH,GACA,SAACI,GACC,MAAqB,iBAAVA,GAA2B,oBAAOA,GACtCA,KAIX,OACE,QAACZ,EAAOC,QAAR,QACEM,UAAWM,GAAAA,CAAWN,EAAD,YAAuBD,MAAAA,EAAAA,EAAW,WAEnDG,GAEHC,K,mCChIP,IAAeR,EAAf,I,oJCQA,IAAMF,EAAS,CACbc,YAAW,gIAMXC,SAAQ,kCACJC,EAAAA,GADG,mBAEaC,EAAAA,EAAAA,KAFb,0CAOPC,YAAW,sDACWC,EAAAA,GADZ,qDAMVC,kBAAiB,4FAIjBC,eAAe,OAAOpB,EAAAA,EAAP,qBAAF,mCAEOgB,EAAAA,EAAAA,KAFP,OAsCA,SAASK,EAAT,GAE0B,IAC/BC,EAD8B,EADtCC,KAEqBC,KAAKC,SAASC,YAA3BJ,IACR,OACE,QAAC,IAAD,CAAQK,MAAM,SAASC,cAAc,UAAUC,YAAU,IACvD,QAAC9B,EAAOc,WAAR,MACE,QAACd,EAAOe,QAAR,MACE,QAACf,EAAOoB,iBAAR,MACE,QAACpB,EAAOqB,cAAR,CACEU,KAAMR,EACNS,UAAQ,EACRC,KAAK,WACLC,KAAK,cAEP,QAAClC,EAAOqB,cAAR,CACEU,KAAK,iBACLE,KAAK,YACLC,KAAK,mBAIX,QAAClC,EAAOkB,WAAR,MACE,iBACEiB,IAAKZ,EACLa,KAAK,kBACLC,OAAO,OACPC,MAAM,OACNC,MAAO,CAAEC,OAAQ","sources":["webpack://jazevedo.me/./src/components/Button.tsx","webpack://jazevedo.me/./src/components/LinkButton/index.ts","webpack://jazevedo.me/./src/pages/resume.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rgba } from \"polished\";\nimport classNames from \"classnames\";\n\nimport { color } from \"../theme/color\";\nimport { shadow } from \"../theme/shadows\";\nimport LinkButton from \"./LinkButton\";\nimport { LinkButtonProps } from \"./LinkButton/LinkButton\";\n\nconst Styled = {\n  Button: styled(LinkButton)`\n    position: relative;\n    text-decoration: none;\n    border-radius: 4px;\n\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n      display: block !important;\n    }\n\n    box-shadow: ${shadow(\"z1\")};\n    --highlight-bg: transparent;\n    --border-size: 0px;\n\n    &.variant-solid {\n      background-color: ${color(\"primary\")};\n      color: ${color(\"light\")};\n\n      &:hover {\n        --highlight-bg: ${color(\"primary+10\")};\n      }\n\n      &:active {\n        --highlight-bg: ${color(\"primary-10\")};\n      }\n    }\n\n    &.variant-hollow {\n      background-color: ${rgba(color(\"light\"), 0.1)};\n      color: ${color(\"text-strong\")};\n      --border-size: 2px;\n\n      &:hover {\n        --highlight-bg: ${rgba(color(\"light\"), 0.1)};\n      }\n\n      &:active {\n        --highlight-bg: ${rgba(color(\"light\"), 0.2)};\n      }\n    }\n\n    --x-padding: 15px;\n    --y-padding: 8px;\n    padding-top: calc(var(--y-padding) - calc(var(--border-size) * 2));\n    padding-bottom: calc(var(--y-padding) - calc(var(--border-size) * 2));\n    padding-left: calc(var(--x-padding) - calc(var(--border-size) * 2));\n    padding-right: calc(var(--x-padding) - calc(var(--border-size) * 2));\n    border: var(--border-size) solid ${color(\"primary\")};\n\n    &:hover {\n      box-shadow: ${shadow(\"z2\")};\n    }\n\n    &:active {\n      box-shadow: ${shadow(\"z0\")};\n    }\n\n    /* Use an absolutely positioned pseudo-element\n    that animates between transparent and opaque\n    to simulate the <Button> having a background color transition\n    without creating an ugly transition upon changing themes */\n    &::before {\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: 100%;\n      content: \" \";\n      transition: 0.1s background-color linear;\n      background-color: var(--highlight-bg);\n      border-radius: 4px;\n      z-index: 0;\n    }\n\n    & > * {\n      /* Ensure the pseudo-element is positioned below the content\n      by creating a new stacking context for the content.\n      This relies on always wrapping children in a span.\n      We do this manually in <Button> for direct children,\n      and for <LinkButton>, the text and icon props\n      automatically get wrapped */\n      position: relative;\n    }\n  `,\n};\n\nexport type ButtonProps = LinkButtonProps & {\n  variant?: \"solid\" | \"hollow\" | null;\n};\n\n/**\n * Styled `<LinkButton>` component that looks like a traditional button\n */\nexport default function Button({\n  variant,\n  className,\n  children,\n  ...rest\n}: ButtonProps): React.ReactElement {\n  // Manually wrap any text nodes with a <span> element\n  // to ensure that the pseudo-element stacking order works.\n  const derivedChildren = React.Children.map(\n    children,\n    (child): React.ReactNode => {\n      if (typeof child === \"string\") return <span>{child}</span>;\n      return child;\n    }\n  );\n\n  return (\n    <Styled.Button\n      className={classNames(className, `variant-${variant ?? \"solid\"}`)}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    >\n      {derivedChildren}\n    </Styled.Button>\n  );\n}\n","import LinkButton from \"./LinkButton\";\n\nexport default LinkButton;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport { gap } from \"../theme/spacing\";\nimport { container } from \"../theme/layout\";\nimport { chromePdfBackground } from \"../theme/color\";\nimport Button from \"../components/Button\";\n\nconst Styled = {\n  PageLayout: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    height: 100%;\n  `,\n  Toolbar: styled.div`\n    ${container}\n    padding-bottom: ${gap.nano};\n    flex-grow: 0;\n    flex-shrink: 0;\n    width: 100%;\n  `,\n  PdfWrapper: styled.div`\n    background-color: ${chromePdfBackground};\n    overflow-y: hidden;\n    height: 100%;\n    position: relative;\n  `,\n  ToolbarButtonBar: styled.div`\n    display: flex;\n    flex-direction: row;\n  `,\n  ToolbarButton: styled(Button)`\n    &:not(:last-child) {\n      margin-right: ${gap.nano};\n    }\n  `,\n};\n\n// Must stay synchronized with below pageQuery\ntype PageQueryResult = {\n  file: {\n    childMdx: {\n      frontmatter: {\n        pdf: string;\n      };\n    };\n  };\n};\n\nexport const pageQuery = graphql`\n  query {\n    file(\n      name: { eq: \"resume\" }\n      extension: { eq: \"md\" }\n      sourceInstanceName: { eq: \"data\" }\n    ) {\n      childMdx {\n        frontmatter {\n          pdf\n        }\n      }\n    }\n  }\n`;\n\nexport type ResumePageProps = {\n  data: PageQueryResult;\n};\n\nexport default function ResumePage({\n  data,\n}: ResumePageProps): React.ReactElement {\n  const { pdf } = data.file.childMdx.frontmatter;\n  return (\n    <Layout title=\"Resume\" headerSpacing=\"compact\" hideFooter>\n      <Styled.PageLayout>\n        <Styled.Toolbar>\n          <Styled.ToolbarButtonBar>\n            <Styled.ToolbarButton\n              href={pdf}\n              download\n              icon=\"download\"\n              text=\"Download\"\n            />\n            <Styled.ToolbarButton\n              href=\"/resume/source\"\n              icon=\"file-code\"\n              text=\"View source\"\n            />\n          </Styled.ToolbarButtonBar>\n        </Styled.Toolbar>\n        <Styled.PdfWrapper>\n          <embed\n            src={pdf}\n            type=\"application/pdf\"\n            height=\"100%\"\n            width=\"100%\"\n            style={{ border: \"none\" }}\n          />\n        </Styled.PdfWrapper>\n      </Styled.PageLayout>\n    </Layout>\n  );\n}\n"],"names":["Styled","Button","LinkButton","shadow","color","rgba","variant","className","children","rest","derivedChildren","React","child","classNames","PageLayout","Toolbar","container","gap","PdfWrapper","chromePdfBackground","ToolbarButtonBar","ToolbarButton","ResumePage","pdf","data","file","childMdx","frontmatter","title","headerSpacing","hideFooter","href","download","icon","text","src","type","height","width","style","border"],"sourceRoot":""}